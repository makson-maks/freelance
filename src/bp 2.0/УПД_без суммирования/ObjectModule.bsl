Функция Печать() Экспорт
	
	ТабДок = ПечатьУниверсальногоПередаточногоДокумента();
	Возврат ТабДок;
	
КонецФункции

Функция ПечатьУниверсальногоПередаточногоДокумента()
	
	мВалютаРегламентированногоУчета   = Константы.ВалютаРегламентированногоУчета.Получить();
	
	ДанныеДокумента = Новый Структура();
	ДанныеДокумента.Вставить("ДокументСсылка",    				СсылкаНаОбъект);
	ДанныеДокумента.Вставить("Номер",             				СсылкаНаОбъект.Номер);
	ДанныеДокумента.Вставить("Дата",              				СсылкаНаОбъект.Дата);
	ДанныеДокумента.Вставить("Ссылка", 			  				Документы.СчетФактураВыданный.ПустаяСсылка());
	ДанныеДокумента.Вставить("ДокументОснование", 				СсылкаНаОбъект);
	ДанныеДокумента.Вставить("Организация",   	  				СсылкаНаОбъект.Организация);
	ДанныеДокумента.Вставить("Контрагент", 		  				СсылкаНаОбъект.Контрагент);
	ДанныеДокумента.Вставить("ДоговорКонтрагента", 		  		СсылкаНаОбъект.ДоговорКонтрагента);
	ДанныеДокумента.Вставить("Руководитель", 	  				СсылкаНаОбъект.Руководитель);
	ДанныеДокумента.Вставить("ГлавныйБухгалтер",  				СсылкаНаОбъект.ГлавныйБухгалтер);
	ДанныеДокумента.Вставить("ВалютаРегламентированногоУчета",  мВалютаРегламентированногоУчета);
	ДанныеДокумента.Вставить("ИдентификаторГосКонтракта",       "");
	ВидДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СсылкаНаОбъект.ДоговорКонтрагента, "ВидДоговора");
	ПередачаНаРеализациюПоКомиссии = (СсылкаНаОбъект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.ПродажаКомиссия)
		И (ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером);
	ДанныеДокумента.Вставить("ПередачаНаРеализациюПоКомиссии",  ПередачаНаРеализациюПоКомиссии);
	
	СчетФактураТребуется = ОпределитьСчетФактураТребуется();
	
	СтруктураОтбораСчетаФактуры = Новый Структура;
	СтруктураОтбораСчетаФактуры.Вставить("ПометкаУдаления", Ложь);
	
	Возврат УчетНДСПечатьУниверсальногоПередаточногоДокумента(ДанныеДокумента, СчетФактураТребуется, СтруктураОтбораСчетаФактуры);
	
КонецФункции

// Возвращает пометку необходимости выписки счет-фактуры по докумету
//
Функция ОпределитьСчетФактураТребуется() Экспорт
	
	Отказ = Ложь;
	ВидДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СсылкаНаОбъект.ДоговорКонтрагента, "ВидДоговора");
	ЕстьНДС = (СсылкаНаОбъект.Товары.Итог("СуммаНДС") > 0) ИЛИ (СсылкаНаОбъект.Услуги.Итог("СуммаНДС") > 0) ИЛИ (СсылкаНаОбъект.АгентскиеУслуги.Итог("СуммаНДС") > 0);
	
	УчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(СсылкаНаОбъект.Дата, Отказ, СсылкаНаОбъект.Организация);
	
	Если Отказ Тогда
		Возврат Ложь;
	ИначеЕсли УчетнаяПолитика.УСН 
		ИЛИ УчетнаяПолитика.ОсобыйПорядокНалогообложения Тогда
		Возврат ЕстьНДС;
	ИначеЕсли ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером Тогда
		Возврат Ложь;
	ИначеЕсли СсылкаНаОбъект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.ОтгрузкаБезПереходаПраваСобственности Тогда
		Если УчетнаяПолитика.НачислятьНДСПоОтгрузке Тогда
			Возврат Истина;
		Иначе
			Возврат Ложь;
		КонецЕсли;
	ИначеЕсли НЕ ЕстьНДС И НЕ УчетнаяПолитика.ПрименяетсяОсвобождениеОтУплатыНДС Тогда
		Возврат Ложь;
	Иначе	
		Возврат Истина;
	КонецЕсли;

КонецФункции

Функция УчетНДСПечатьУниверсальногоПередаточногоДокумента(ДанныеДокумента, СчетФактураТребуется, СтруктураОтбораСчетаФактуры = Неопределено)
	
	Если ДанныеДокумента.Дата < '20130101' Тогда
		ТекстСообщения = "Применение формы универсального передаточного документа возможно только с 01 января 2013 года!";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат Неопределено;
	КонецЕсли;

	ТабДокумент = Новый ТабличныйДокумент;

	Если СтруктураОтбораСчетаФактуры = Неопределено Тогда
		СчетФактура = УчетНДС.НайтиПодчиненныйСчетФактуру(ДанныеДокумента.ДокументСсылка, "СчетФактураВыданный");
	Иначе
		СчетФактура = УчетНДС.НайтиПодчиненныйСчетФактуру(ДанныеДокумента.ДокументСсылка, "СчетФактураВыданный", СтруктураОтбораСчетаФактуры);
	КонецЕсли;
		
	// УПД печатается из документа счет-фактура
	Если ЗначениеЗаполнено(СчетФактура) ИЛИ СчетФактураТребуется Тогда

		Если НЕ ЗначениеЗаполнено(СчетФактура) Тогда
			ТекстСообщения = "По документу %1 не выписан счет-фактура";
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ТекстСообщения, ДанныеДокумента.ДокументСсылка);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат Неопределено;
		КонецЕсли;
		
		СчетФактураОбъект = СчетФактура.ПолучитьОбъект();
		
		ДанныеДляПечати = СчетФактураОбъект.ПодготовитьДанныеДляПечатиУниверсальногоПередаточногоДокумента();
		Если ДанныеДляПечати = Неопределено Тогда
			Возврат ТабДокумент;
		КонецЕсли;
		
		Если ДанныеДокумента.Свойство("ДатаОтгрузкиПередачи") Тогда
			ДанныеДляПечати.Вставить("ДатаОтгрузкиПередачи", ДанныеДокумента.ДатаОтгрузкиПередачи);
		КонецЕсли;
		
		Возврат СчетФактураОбъектПечатьУниверсальногоПередаточногоДокумента(ДанныеДляПечати);
		
	КонецЕсли;
	
	// УПД печатается по статусу 2
	ДанныеДляПечати = УчетНДС.ПодготовитьДанныеДляПечатиУниверсальногоПередаточногоДокумента(ДанныеДокумента);
	Если ДанныеДляПечати = Неопределено Тогда
		Возврат ТабДокумент;
	КонецЕсли;
	
	// Устанавливаем параметры печати и колонтитулы
	ТабДокумент.ОриентацияСтраницы 	= ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ПолеСверху 			= 12;
	ТабДокумент.ПолеСлева 			= 0;
	ТабДокумент.ПолеСнизу 		 	= 0;
	ТабДокумент.ПолеСправа 			= 0;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_УниверсальныйПередаточныйДокумент";
	
	Макет = ПолучитьОбщийМакет("УниверсальныйПередаточныйДокумент");
	
	ВывестиСчетФактуруВТабличныйДокумент(ТабДокумент, Макет, ДанныеДляПечати);
	
	УчетНДС.ВывестиПодвалУниверсальногоПередаточногоДокументаВТабличныйДокумент(ТабДокумент, Макет, ДанныеДляПечати);
	
	Возврат ТабДокумент;	
	
КонецФункции

Функция ПодготовитьДанныеДляПечатиУниверсальногоПередаточногоДокумента(ДанныеДокумента)
	
	// сбор данных для печати счета фактуры
	ДанныеДляПечати = СобратьДанныеДляПечатиСчетаФактуры(ДанныеДокумента.ДокументСсылка, ДанныеДокумента);
	Если ДанныеДляПечати = Неопределено или ТипЗнч(ДанныеДляПечати) = Тип("Соответствие") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ДанныеДокумента.Свойство("ПередачаНаРеализациюПоКомиссии") И ДанныеДокумента.ПередачаНаРеализациюПоКомиссии Тогда
		ДанныеДляПечати.Вставить("ПередачаНаРеализациюПоКомиссии", ДанныеДокумента.ПередачаНаРеализациюПоКомиссии);
		Если ДанныеДляПечати.Грузоотправитель = "он же" Тогда
			ДанныеДляПечати.Грузоотправитель = ДанныеДляПечати.Поставщик;
		КонецЕсли;
	КонецЕсли;
	
	// заполнение данных ФИОРуководителя и ФИОГлавногоБухгалтера из документа
	Если ДанныеДокумента.Свойство("Руководитель") И ЗначениеЗаполнено(ДанныеДокумента.Руководитель) 
		И ДанныеДляПечати.Свойство("ФИОРуководителя") Тогда 
		ДанныеДляПечати.ФИОРуководителя = ОбщегоНазначения.ФамилияИнициалыФизЛица(ДанныеДокумента.Руководитель);
	КонецЕсли;
	Если ДанныеДокумента.Свойство("ГлавныйБухгалтер") И ЗначениеЗаполнено(ДанныеДокумента.ГлавныйБухгалтер) 
		И ДанныеДляПечати.Свойство("ФИОГлавногоБухгалтера") Тогда
		ДанныеДляПечати.ФИОГлавногоБухгалтера = ОбщегоНазначения.ФамилияИнициалыФизЛица(ДанныеДокумента.ГлавныйБухгалтер);
	КонецЕсли;
	
	ДанныеДляПечати.ТабличнаяЧасть.ЗаполнитьЗначения(ДанныеДляПечати.СуммаВключаетНДС, "СуммаВключаетНДС");
	
	// изменение данных для договоров в у.е
	РасчетыВУсловныхЕдиницах = Ложь;
	Если ЗначениеЗаполнено(ДанныеДокумента.ДоговорКонтрагента) Тогда
		РасчетыВУсловныхЕдиницах = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеДокумента.ДоговорКонтрагента, "РасчетыВУсловныхЕдиницах");
	КонецЕсли;
	
	Если РасчетыВУсловныхЕдиницах И ДанныеДляПечати.Валюта <> ДанныеДокумента.ВалютаРегламентированногоУчета Тогда
		
		УчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(ДанныеДокумента.Дата, Неопределено, ДанныеДокумента.Организация);
		Если УчетнаяПолитика <> Неопределено 
			И (УчетнаяПолитика.ФормироватьСчетФактуруПоУЕвРублях
			ИЛИ УчетНДС.ПолучитьВерсиюПостановления(ДанныеДокумента.Дата) = 2) Тогда
			
			УчетНДС.ПерезаполнитьСуммыПоУЕвРублях(ДанныеДляПечати, ДанныеДокумента.ДокументСсылка, ДанныеДокумента);
			ДанныеДляПечати.Валюта = ДанныеДокумента.ВалютаРегламентированногоУчета;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// заполнение колонок код и артикул
	ДополнительнаяКолонкаПечатныхФормДокументов = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить Тогда
		ДанныеДляПечати.ТабличнаяЧасть.ЗаполнитьЗначения("", "ТоварКод");
		ДанныеДляПечати.ТабличнаяЧасть.Колонки.Удалить("ТоварАртикул");
	ИначеЕсли ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ДанныеДляПечати.ТабличнаяЧасть.Колонки.Удалить("ТоварКод");
		ДанныеДляПечати.ТабличнаяЧасть.Колонки.ТоварАртикул.Имя = "ТоварКод";
	Иначе
		ДанныеДляПечати.ТабличнаяЧасть.Колонки.Удалить("ТоварАртикул");
	КонецЕсли;
	
	// Дата совершения факта хозяйственной жизни. Не может быть ранее даты составления УПД.
	Если ДанныеДокумента.Свойство("ДатаОтгрузкиПередачи") Тогда
		ДанныеДляПечати.Вставить("ДатаОтгрузкиПередачи", 	ДанныеДокумента.ДатаОтгрузкиПередачи);
	Иначе
		ДанныеДляПечати.Вставить("ДатаОтгрузкиПередачи", 	ДанныеДокумента.Дата);
	КонецЕсли;
	ДанныеДляПечати.Вставить("СтатусУПД", 				2);
	ДанныеДляПечати.Вставить("Основание", 				Строка(ДанныеДокумента.ДоговорКонтрагента));
	
	Возврат ДанныеДляПечати;
	
КонецФункции

Функция СобратьДанныеДляПечатиСчетаФактуры(ТекущееОснование, ДанныеСчетаФактуры)
	
	ТипОснования = ТипЗнч(ТекущееОснование);
	ДанныеДляПечати = Неопределено;
	
	Если НЕ ДанныеСчетаФактуры.Свойство("ВидСчетаФактуры") Тогда
		ДанныеСчетаФактуры.Вставить("ВидСчетаФактуры", Перечисления.ВидСчетаФактурыВыставленного.НаРеализацию);
	КонецЕсли;
	Если НЕ ДанныеСчетаФактуры.Свойство("Исправление") Тогда
		ДанныеСчетаФактуры.Вставить("Исправление", Ложь);
	КонецЕсли;
	Если НЕ ДанныеСчетаФактуры.Свойство("НомерИсправления") Тогда
		ДанныеСчетаФактуры.Вставить("НомерИсправления", 0);
	КонецЕсли;
	Если НЕ ДанныеСчетаФактуры.Свойство("НомерПлатежноРасчетногоДокумента") Тогда
		ДанныеСчетаФактуры.Вставить("НомерПлатежноРасчетногоДокумента", "");
	КонецЕсли;
	Если НЕ ДанныеСчетаФактуры.Свойство("ДатаПлатежноРасчетногоДокумента") Тогда
		ДанныеСчетаФактуры.Вставить("ДатаПлатежноРасчетногоДокумента", "");
	КонецЕсли;
	Если НЕ ДанныеСчетаФактуры.Свойство("ДоговорКонтрагента") Тогда
		ДанныеСчетаФактуры.Вставить("ДоговорКонтрагента", Неопределено);
	КонецЕсли;
	Если НЕ ДанныеСчетаФактуры.Свойство("ДокументОснование") Тогда
		ДанныеСчетаФактуры.Вставить("ДокументОснование", ТекущееОснование);
	КонецЕсли;
	
	Если ТипОснования = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		ДанныеДляПечати    = СобратьДанныеПоРеализацияТоваровУслуг(ТекущееОснование, ДанныеСчетаФактуры);
	КонецЕсли;
	
	Если ДанныеДляПечати = Неопределено Тогда
		Возврат ДанныеДляПечати;
	КонецЕсли;
	
	ДанныеДляПечати.Вставить("ДокументОснование",  ДанныеСчетаФактуры.ДокументОснование);
	ДанныеДляПечати.Вставить("Ссылка",             ДанныеСчетаФактуры.Ссылка);
	ДанныеДляПечати.Вставить("ВидСчетаФактуры",    ДанныеСчетаФактуры.ВидСчетаФактуры);
	ДанныеДляПечати.Вставить("Исправление",        ДанныеСчетаФактуры.Исправление);
	ДанныеДляПечати.Вставить("НомерИсправления",   ДанныеСчетаФактуры.НомерИсправления);
	ДанныеДляПечати.Вставить("ДатаСчетФактуры",    ДанныеСчетаФактуры.Дата);
	ДанныеДляПечати.Вставить("ДоговорКонтрагента", ДанныеСчетаФактуры.ДоговорКонтрагента);
	
	Если ДанныеСчетаФактуры.Свойство("СчетФактураБезНДС") Тогда
		ДанныеДляПечати.Вставить("СчетФактураБезНДС", ДанныеСчетаФактуры.СчетФактураБезНДС);
	ИначеЕсли НЕ ДанныеДляПечати.Свойство("СчетФактураБезНДС") Тогда
		ДанныеДляПечати.Вставить("СчетФактураБезНДС", Ложь);
	КонецЕсли;
	
	Возврат ДанныеДляПечати;
	
КонецФункции

// Функция собирает данные по документу основанию реализации и возвращает типизированную 
// структуру с данными
// 
Функция СобратьДанныеПоРеализацияТоваровУслуг(ТекущееОснование, ДанныеСчетаФактуры)
	Перем ПодразделениеОтветственныхЛиц;

	Запрос = Новый Запрос;
	Если ТипЗнч(ТекущееОснование) = Тип("ДокументСсылка.РеализацияОтгруженныхТоваров") Тогда
		Запрос.УстановитьПараметр("ДокументОснование", ТекущееОснование.ДокументОтгрузки);
	Иначе
		Запрос.УстановитьПараметр("ДокументОснование", ТекущееОснование);
	КонецЕсли;
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Организация,
	|	РеализацияТоваровУслуг.Организация КАК Поставщик,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(РеализацияТоваровУслуг.Грузоотправитель, &ПустойКонтрагент) = &ПустойКонтрагент
	|			ТОГДА ""он же""
	|		ИНАЧЕ РеализацияТоваровУслуг.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	РеализацияТоваровУслуг.Контрагент КАК Покупатель,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(РеализацияТоваровУслуг.Грузополучатель, &ПустойКонтрагент) = &ПустойКонтрагент
	|			ТОГДА РеализацияТоваровУслуг.Контрагент
	|		ИНАЧЕ РеализацияТоваровУслуг.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	РеализацияТоваровУслуг.Склад,
	|	РеализацияТоваровУслуг.СуммаДокумента КАК Сумма,
	|	РеализацияТоваровУслуг.ВалютаДокумента КАК Валюта,
	|	РеализацияТоваровУслуг.УчитыватьНДС КАК УчитыватьНДС,
	|	РеализацияТоваровУслуг.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	РеализацияТоваровУслуг.АдресДоставки КАК АдресДоставки,
	|	РеализацияТоваровУслуг.Руководитель КАК Руководитель,
	|	РеализацияТоваровУслуг.ЗаРуководителяПоПриказу КАК ЗаРуководителяПоПриказу,
	|	РеализацияТоваровУслуг.ОтпускПроизвел КАК ОтпускПроизвел,
	|	РеализацияТоваровУслуг.ОтветственныйЗаОформление,
	|	РеализацияТоваровУслуг.СведенияОТранспортировкеИГрузе,
	|	РеализацияТоваровУслуг.СопроводительныеДокументы,
	|	РеализацияТоваровУслуг.Перевозчик,
	|	РеализацияТоваровУслуг.ПеревозкаАвтотранспортом,
	|	РеализацияТоваровУслуг.Номер КАК ТранспортнаяНакладнаяНомер,
	|	РеализацияТоваровУслуг.Дата КАК ТранспортнаяНакладнаяДата
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &ДокументОснование";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	Запрос = Новый Запрос;
	Если ТипЗнч(ТекущееОснование) = Тип("ДокументСсылка.РеализацияОтгруженныхТоваров") Тогда
		Запрос.УстановитьПараметр("ДокументОснование", ТекущееОснование.ДокументОтгрузки);
	Иначе
		Запрос.УстановитьПараметр("ДокументОснование", ТекущееОснование);
	КонецЕсли;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияТоваровУслугТовары.Номенклатура КАК Товар,
	|	ВЫРАЗИТЬ(РеализацияТоваровУслугТовары.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК ТоварНаименование,
	|	РеализацияТоваровУслугТовары.Номенклатура.КодТНВЭД.Код КАК ТоварКодТНВЭД,
	|	РеализацияТоваровУслугТовары.Номенклатура.Код КАК ТоварКод,
	|	РеализацияТоваровУслугТовары.Номенклатура.Артикул КАК ТоварАртикул,
	|	РеализацияТоваровУслугТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	РеализацияТоваровУслугТовары.СтранаПроисхождения.НаименованиеПолное КАК ПредставлениеСтраны,
	|	РеализацияТоваровУслугТовары.СтранаПроисхождения.Код КАК СтранаПроисхожденияКод,
	|	РеализацияТоваровУслугТовары.Номенклатура.БазоваяЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
	|	РеализацияТоваровУслугТовары.Номенклатура.БазоваяЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	РеализацияТоваровУслугТовары.НомерГТД КАК НомерГТД,
	|	РеализацияТоваровУслугТовары.НомерГТД.Представление КАК ПредставлениеГТД,
	|	РеализацияТоваровУслугТовары.Количество КАК Количество,
	|	РеализацияТоваровУслугТовары.Цена КАК Цена,
	|	РеализацияТоваровУслугТовары.СтавкаНДС КАК СтавкаНДС,
	|	РеализацияТоваровУслугТовары.СуммаНДС КАК СуммаНДС,
	|	РеализацияТоваровУслугТовары.Сумма КАК Сумма,
	|	РеализацияТоваровУслугТовары.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслугТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ЕстьНДС,
	|	""Товары"" КАК ВидПоступления
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка = &ДокументОснование
	|";
	Если Не (ТипЗнч(ТекущееОснование) = Тип("ДокументСсылка.РеализацияОтгруженныхТоваров") Или
		   ТекущееОснование.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.ОтгрузкаБезПереходаПраваСобственности) Тогда
		Запрос.Текст = Запрос.Текст + 
		"ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РеализацияТоваровУслугУслуги.Номенклатура,
		|	ВЫРАЗИТЬ(РеализацияТоваровУслугУслуги.Содержание КАК СТРОКА(1000)),
		|	"""",
		|	РеализацияТоваровУслугУслуги.Номенклатура.Код,
		|	РеализацияТоваровУслугУслуги.Номенклатура.Артикул,
		|	NULL,
		|	"""",
		|	"""",
		|	РеализацияТоваровУслугУслуги.Номенклатура.БазоваяЕдиницаИзмерения.Представление,
		|	РеализацияТоваровУслугУслуги.Номенклатура.БазоваяЕдиницаИзмерения.Код,
		|	NULL,
		|	"""",
		|	РеализацияТоваровУслугУслуги.Количество,
		|	РеализацияТоваровУслугУслуги.Цена,
		|	РеализацияТоваровУслугУслуги.СтавкаНДС,
		|	РеализацияТоваровУслугУслуги.СуммаНДС,
		|	РеализацияТоваровУслугУслуги.Сумма,
		|	РеализацияТоваровУслугУслуги.НомерСтроки,
		|	ВЫБОР
		|		КОГДА РеализацияТоваровУслугУслуги.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		|			ТОГДА 0
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК ЕстьНДС,
		|	""Услуги""
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
		|ГДЕ
		|	РеализацияТоваровУслугУслуги.Ссылка = &ДокументОснование
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РеализацияТоваровУслугАгентскиеУслуги.Номенклатура,
		|	ВЫРАЗИТЬ(РеализацияТоваровУслугАгентскиеУслуги.Содержание КАК СТРОКА(1000)),
		|	"""",
		|	РеализацияТоваровУслугАгентскиеУслуги.Номенклатура.Код,
		|	РеализацияТоваровУслугАгентскиеУслуги.Номенклатура.Артикул,
		|	NULL,
		|	"""",
		|	"""",
		|	РеализацияТоваровУслугАгентскиеУслуги.Номенклатура.БазоваяЕдиницаИзмерения.Представление,
		|	РеализацияТоваровУслугАгентскиеУслуги.Номенклатура.БазоваяЕдиницаИзмерения.Код,
		|	NULL,
		|	"""",
		|	РеализацияТоваровУслугАгентскиеУслуги.Количество,
		|	РеализацияТоваровУслугАгентскиеУслуги.Цена,
		|	РеализацияТоваровУслугАгентскиеУслуги.СтавкаНДС,
		|	РеализацияТоваровУслугАгентскиеУслуги.СуммаНДС,
		|	РеализацияТоваровУслугАгентскиеУслуги.Сумма,
		|	РеализацияТоваровУслугАгентскиеУслуги.НомерСтроки,
		|	ВЫБОР
		|		КОГДА РеализацияТоваровУслугАгентскиеУслуги.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		|			ТОГДА 0
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК ЕстьНДС,
		|	""АгентскиеУслуги""
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.АгентскиеУслуги КАК РеализацияТоваровУслугАгентскиеУслуги
		|ГДЕ
		|	РеализацияТоваровУслугАгентскиеУслуги.Ссылка = &ДокументОснование
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВидПоступления,
		|	НомерСтроки";
	Иначе 
		Запрос.Текст = Запрос.Текст + 
		"УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	КонецЕсли;
	
	ВыборкаСтрокТовары = Запрос.Выполнить().Выбрать();

	ДанныеДляПечати = Новый Структура();
	
	Поставщик = Шапка.Поставщик;
	Грузоотправитель = Шапка.Грузоотправитель;
	ДанныеДляПечати.Вставить("Организация",      Шапка.Организация);
	ДанныеДляПечати.Вставить("Номер",            ДанныеСчетаФактуры.Номер);
	ДанныеДляПечати.Вставить("Дата",             ДанныеСчетаФактуры.Дата);
	ДанныеДляПечати.Вставить("НомерПРД",         "");
	ДанныеДляПечати.Вставить("ДатаПРД",          "");
	ДанныеДляПечати.Вставить("Поставщик",        Поставщик);
	ДанныеДляПечати.Вставить("Грузоотправитель", Грузоотправитель);
	ДанныеДляПечати.Вставить("Покупатель",       Шапка.Покупатель);
	ДанныеДляПечати.Вставить("Грузополучатель",  Шапка.Грузополучатель);
	ДанныеДляПечати.Вставить("АдресДоставки",    Шапка.АдресДоставки);
	ДанныеДляПечати.Вставить("Сумма",            Шапка.Сумма);
	ДанныеДляПечати.Вставить("Валюта",           Шапка.Валюта);
	ДанныеДляПечати.Вставить("УчитыватьНДС",     Шапка.УчитыватьНДС);
	ДанныеДляПечати.Вставить("СуммаВключаетНДС", Шапка.СуммаВключаетНДС);
	
	// доп. сведения для УПД
	ДанныеТранспортнаяНакладная = Новый Массив;
	Если Шапка.ПеревозкаАвтотранспортом Тогда
		
		ПредставлениеТранспортнаяНакладная = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Транспортная накладная № %1 от %2'"),
			ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.ТранспортнаяНакладнаяНомер, Истина, Ложь), 
			Формат(Шапка.ТранспортнаяНакладнаяДата, "ДЛФ=ДД"));
		ДанныеТранспортнаяНакладная.Добавить(ПредставлениеТранспортнаяНакладная);
		
	КонецЕсли;
	Если ЗначениеЗаполнено(Шапка.Перевозчик) Тогда
		
		ДанныеТранспортнаяНакладная.Добавить(
			"Перевозчик " + ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Шапка.Перевозчик, "НаименованиеПолное"));
			
	КонецЕсли;
	Если ЗначениеЗаполнено(Шапка.СведенияОТранспортировкеИГрузе) Тогда
		ДанныеТранспортнаяНакладная.Добавить(Шапка.СведенияОТранспортировкеИГрузе);
	КонецЕсли;
	ДанныеДляПечати.Вставить("ДанныеТранспортнаяНакладная",
		СтроковыеФункцииКлиентСервер.СтрокаИзМассиваПодстрок(ДанныеТранспортнаяНакладная, ", "));
		
	ДанныеДляПечати.Вставить("СопроводительныеДокументы", Шапка.СопроводительныеДокументы);
	
	Руководители = ОбщегоНазначения.ОтветственныеЛица(Шапка.Организация, ДанныеСчетаФактуры.Дата, ПодразделениеОтветственныхЛиц);
	ДанныеДляПечати.Вставить(?(РегламентированнаяОтчетность.ЭтоПБОЮЛ(Шапка.Поставщик), "ФИОПБОЮЛ", "ФИОРуководителя"), Руководители.РуководительПредставление);
	ДанныеДляПечати.Вставить("ФИОГлавногоБухгалтера", Руководители.ГлавныйБухгалтерПредставление);
	
	// ответственный за оформление документа УПД
	ОтветственныйЗаОформление = ?(
		ЗначениеЗаполнено(Шапка.ОтветственныйЗаОформление),
		Шапка.ОтветственныйЗаОформление, 
		?(ЗначениеЗаполнено(Шапка.Руководитель), Шапка.Руководитель, Руководители.Руководитель));
	ДанныеОтветственного = ОбщегоНазначения.ДанныеФизЛица(
		Шапка.Организация,
		ОтветственныйЗаОформление,
		ДанныеСчетаФактуры.Дата);
	ДанныеДляПечати.Вставить("ФИООтветственного", ДанныеОтветственного.Представление);
	ДанныеДляПечати.Вставить("ОтветственныйЗаОформление", ДанныеОтветственного);
	
	Товары = УчетНДС.СоздатьТаблицуДляЗаполнениеТабличнойЧастиДанныхПечати();
	
	ЕстьТовары = Ложь;
	ЕстьУслуги = Ложь;
	СчетФактураБезНДС = (ВыборкаСтрокТовары.Количество() > 0);

	Пока ВыборкаСтрокТовары.Следующий() = 1 Цикл

		ЕстьТовары = ЕстьТовары ИЛИ (ВыборкаСтрокТовары.ВидПоступления = "Товары");
		ЕстьУслуги = ЕстьУслуги ИЛИ (ВыборкаСтрокТовары.ВидПоступления = "Услуги") ИЛИ (ВыборкаСтрокТовары.ВидПоступления = "АгентскиеУслуги");
		СчетФактураБезНДС = СчетФактураБезНДС И (ВыборкаСтрокТовары.ЕстьНДС = 0); 
		
		Строчка = Товары.Добавить();
		
		ЗаполнитьЗначенияСвойств(Строчка, ВыборкаСтрокТовары);
		
		Строчка.ТоварНаименование   = СокрЛП(ВыборкаСтрокТовары.ТоварНаименование);
		Строчка.ПредставлениеСтраны = ?(НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.ПредставлениеСтраны), 
			ВыборкаСтрокТовары.СтранаПроисхождения, ВыборкаСтрокТовары.ПредставлениеСтраны);
		
	КонецЦикла;
	
	ДанныеДляПечати.Вставить("ТабличнаяЧасть", 		Товары);
	ДанныеДляПечати.Вставить("СчетФактураБезНДС", 	СчетФактураБезНДС);
	
	// Параметры для универсального передаточного документа
	Если ЗначениеЗаполнено(Шапка.ОтпускПроизвел) Тогда
		ДанныеДляПечати.Вставить("ФИОКладовщика", ОбщегоНазначения.ФамилияИнициалыФизЛица(Шапка.ОтпускПроизвел));
		ДанныеПодотчетногоЛица = ОбщегоНазначения.ДанныеФизЛица(Шапка.Организация, Шапка.ОтпускПроизвел, ДанныеСчетаФактуры.Дата);
		ДанныеДляПечати.Вставить("Кладовщик", ДанныеПодотчетногоЛица);
		Если ЗначениеЗаполнено(ДанныеПодотчетногоЛица.Должность) Тогда 
			ДанныеДляПечати.Вставить("ДолжностьКладовщика", "" + ДанныеПодотчетногоЛица.Должность);
		Иначе
			ДанныеДляПечати.Вставить("ДолжностьКладовщика", "");
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(Шапка.Склад) И ЕстьТовары Тогда
		Срез = РегистрыСведений.ОтветственныеЛица.СрезПоследних(ДанныеСчетаФактуры.Дата, Новый Структура("СтруктурнаяЕдиница", Шапка.Склад));
		Если Срез.Количество() > 0 Тогда
			ДанныеПодотчетногоЛица = ОбщегоНазначения.ДанныеФизЛица(Шапка.Организация, Срез[0].ФизическоеЛицо, ДанныеСчетаФактуры.Дата);
			ДанныеДляПечати.Вставить("Кладовщик", ДанныеПодотчетногоЛица);
			ДанныеДляПечати.Вставить("ФИОКладовщика", "" + ДанныеПодотчетногоЛица.Представление);
			ДанныеДляПечати.Вставить("ДолжностьКладовщика", "" + ДанныеПодотчетногоЛица.Должность);
		Иначе 
			ДанныеДляПечати.Вставить("ФИОКладовщика", "");
			ДанныеДляПечати.Вставить("ДолжностьКладовщика", "");
		КонецЕсли;
	ИначеЕсли ЕстьУслуги Тогда
		Если ЗначениеЗаполнено(Шапка.Руководитель) И Шапка.Руководитель <> Руководители.Руководитель Тогда
			ДанныеПодотчетногоЛица = ОбщегоНазначения.ДанныеФизЛица(Шапка.Организация, Шапка.Руководитель, ДанныеСчетаФактуры.Дата);
			ДанныеДляПечати.Вставить("Кладовщик", ДанныеПодотчетногоЛица);
			ФИОРуководителя = ОбщегоНазначения.ФамилияИнициалыФизЛица(Шапка.Руководитель) + " " + Шапка.ЗаРуководителяПоПриказу;
			ДанныеДляПечати.Вставить("ФИОКладовщика",		ФИОРуководителя);
			ДанныеДляПечати.Вставить("ДолжностьКладовщика", "" + ДанныеПодотчетногоЛица.Должность);
		Иначе
			ДанныеДляПечати.Вставить("ФИОКладовщика",       Руководители.РуководительПредставление);
			ДанныеДляПечати.Вставить("ДолжностьКладовщика", Руководители.РуководительДолжность);
		КонецЕсли;
	Иначе
		ДанныеДляПечати.Вставить("ФИОКладовщика", "");
		ДанныеДляПечати.Вставить("ДолжностьКладовщика", "");
	КонецЕсли;

	Если Не ЕстьТовары Тогда
		ДанныеДляПечати.Грузоотправитель = "";
		ДанныеДляПечати.Грузополучатель  = "";
		ДанныеДляПечати.АдресДоставки 	 = "";
	КонецЕсли;
	
	Возврат ДанныеДляПечати;

КонецФункции // СобратьДанныеПоРеализацияТоваровУслуг()

Процедура ВывестиСчетФактуруВТабличныйДокумент(ТабДокумент, Макет, ДанныеДляПечати)
	
	Дата 			= ДанныеДляПечати.ДатаСчетФактуры; 
	ЭтоПечатьУПД 	= ДанныеДляПечати.Свойство("СтатусУПД");
	
	БезПереходаПраваСобственности = Ложь;
	Если ЭтоПечатьУПД И (ДанныеДляПечати.СтатусУПД = 2) Тогда
		Если ДанныеДляПечати.Свойство("ПередачаНаРеализациюПоКомиссии") 
			И ДанныеДляПечати.ПередачаНаРеализациюПоКомиссии Тогда
			БезПереходаПраваСобственности = Истина;
		КонецЕсли;
		
		Если ДанныеДляПечати.Свойство("ДокументОснование") 
			И ТипЗнч(ДанныеДляПечати.ДокументОснование) = Тип("ДокументСсылка.ПередачаТоваров") Тогда
			БезПереходаПраваСобственности = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеДляПечати.Поставщик) = Тип("Массив") Тогда
		СведенияОПоставщике = Новый Массив;
		Для каждого Поставщик Из ДанныеДляПечати.Поставщик Цикл
			СведенияОПоставщике.Добавить(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Поставщик, Дата));
		КонецЦикла;
	Иначе
		СведенияОПоставщике  = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ДанныеДляПечати.Поставщик, Дата);
	КонецЕсли;
	
	НужныСведенияОПодразделенииПокупателя = ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаРеализацию
		ИЛИ ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАванс;
	
	Если ТипЗнч(ДанныеДляПечати.Покупатель) = Тип("Массив") Тогда
		СведенияОПокупателе = Новый Массив;
		СведенияОПодразделенииПокупателя = Новый Массив;
		Для каждого Покупатель Из ДанныеДляПечати.Покупатель Цикл
			Если НужныСведенияОПодразделенииПокупателя Тогда
				РеквизитыПокупателя = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Покупатель, "ГоловнойКонтрагент, ОбособленноеПодразделение");
				Если РеквизитыПокупателя.ОбособленноеПодразделение И ЗначениеЗаполнено(РеквизитыПокупателя.ГоловнойКонтрагент) Тогда
					СведенияОПокупателе.Добавить(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(РеквизитыПокупателя.ГоловнойКонтрагент, Дата));
					СведенияОПодразделенииПокупателя.Добавить(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ДанныеДляПечати.Покупатель, Дата));
				Иначе
					СведенияОПокупателе.Добавить(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Покупатель, Дата));
					СведенияОПодразделенииПокупателя.Добавить(Неопределено);
				КонецЕсли;
			Иначе
				СведенияОПокупателе.Добавить(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Покупатель, Дата));
				СведенияОПодразделенииПокупателя.Добавить(Неопределено);
			КонецЕсли;
		КонецЦикла;
	Иначе
		Если НужныСведенияОПодразделенииПокупателя
			И ТипЗнч(ДанныеДляПечати.Покупатель) = Тип("СправочникСсылка.Контрагенты") И ЗначениеЗаполнено(ДанныеДляПечати.Покупатель) Тогда
			РеквизитыПокупателя = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(ДанныеДляПечати.Покупатель, "ГоловнойКонтрагент, ОбособленноеПодразделение");
			Если РеквизитыПокупателя.ОбособленноеПодразделение И ЗначениеЗаполнено(РеквизитыПокупателя.ГоловнойКонтрагент) Тогда
				СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(РеквизитыПокупателя.ГоловнойКонтрагент, Дата);
				СведенияОПодразделенииПокупателя = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ДанныеДляПечати.Покупатель, Дата);
			Иначе
				СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ДанныеДляПечати.Покупатель, Дата);
				СведенияОПодразделенииПокупателя = Неопределено;
			КонецЕсли;
		Иначе
			СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ДанныеДляПечати.Покупатель, Дата);
			СведенияОПодразделенииПокупателя = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	// Выводим шапку
	ВедетсяУчетНДСПоФЗ56 = УчетНДС.ВедетсяУчетНДСПоФЗ56(ДанныеДляПечати.Дата);
	Если ВедетсяУчетНДСПоФЗ56 Тогда 
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка625");
	Иначе
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка1137");
	КонецЕсли;
	ОбластьМакета.Параметры.Заполнить(ДанныеДляПечати);
	
	Если ЭтоПечатьУПД Тогда
		Если ДанныеДляПечати.Исправление Тогда
			ОбластьМакета.Параметры.НомерИсправления = Строка(ДанныеДляПечати.НомерИсправления);
			ОбластьМакета.Параметры.ДатаИсправления  = Формат(Дата, "ДФ='дд ММММ гггг'") + " г.";
		Иначе
			ОбластьМакета.Параметры.НомерИсправления = "--";
			ОбластьМакета.Параметры.ДатаИсправления  = "--";
		КонецЕсли;
	Иначе
		Если ДанныеДляПечати.Исправление Тогда
			ОбластьМакета.Параметры.НомерИсправления = "Исправление № " + Строка(ДанныеДляПечати.НомерИсправления) + " от " + Формат(Дата, "ДФ='дд ММММ гггг'") + " г.";
		Иначе
			ОбластьМакета.Параметры.НомерИсправления = "Исправление № -- от --";
		КонецЕсли;
	КонецЕсли;
	
	Если БезПереходаПраваСобственности Тогда
		
		ОбластьМакета.Параметры.ПредставлениеПоставщика = "--";
		ОбластьМакета.Параметры.АдресПоставщика 		= "--";
		ОбластьМакета.Параметры.ИННпоставщика 			= "--";
		
	Иначе
		
		ЗаголовокПоставщика      = ?(ЭтоПечатьУПД, "", "Продавец: ");
		ЗаголовокАдресПоставщика = ?(ЭтоПечатьУПД, "", "Адрес: ");
		ЗаголовокИННпоставщика   = ?(ЭтоПечатьУПД, "", "ИНН/КПП продавца: ");
		
		КПППодразделения = "";
		
		Если ТипЗнч(СведенияОПоставщике) = Тип("Массив")  Тогда
			
			ТекстПоставщика      = "";
			ТекстАдресПоставщика = "";
			ТекстИННПоставщика   = "";
			СведенияОКПП = Неопределено;
			
			Для Индекс = 0 По СведенияОПоставщике.ВГраница() Цикл
				
				ДанныеПоставщика = СведенияОПоставщике[Индекс];
			
				ТекстПоставщика = ТекстПоставщика + ?(ПустаяСтрока(ТекстПоставщика), "", ";")
					+ ФормированиеПечатныхФорм.ОписаниеОрганизации(ДанныеПоставщика, "НаименованиеДляПечатныхФорм,");
				ТекстАдресПоставщика = ТекстАдресПоставщика + ?(ПустаяСтрока(ТекстАдресПоставщика), "", ";")
					+ ФормированиеПечатныхФорм.ОписаниеОрганизации(ДанныеПоставщика, "ЮридическийАдрес,");
				КПП = ?(СведенияОКПП <> Неопределено И СведенияОКПП[Индекс] <> Неопределено, 
					СведенияОКПП[Индекс],
					ФормированиеПечатныхФорм.ОписаниеОрганизации(ДанныеПоставщика, "КПП,", Ложь));
				ТекстИННПоставщика = ТекстИННПоставщика + ?(ПустаяСтрока(ТекстИННПоставщика), "", ";")
					+ ФормированиеПечатныхФорм.ОписаниеОрганизации(ДанныеПоставщика, "ИНН,", Ложь) 
					+ ?(ЗначениеЗаполнено(КПП), "/" + КПП, "");
			
			КонецЦикла;
			
		Иначе
			
			ТекстПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "НаименованиеДляПечатныхФорм,");
			ТекстАдресПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ЮридическийАдрес,");
			
			Если ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НалоговыйАгент
				И ДанныеДляПечати.ДоговорКонтрагента.ВидАгентскогоДоговора = Перечисления.ВидыАгентскихДоговоров.Нерезидент Тогда
				ТекстИННПоставщика = "--";
			Иначе
				Если ДанныеДляПечати.Свойство("КПП") Тогда
					КПП = ДанныеДляПечати.КПП; 
				ИначеЕсли ЗначениеЗаполнено(КПППодразделения) Тогда
					КПП = КПППодразделения;
				Иначе
					КПП = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "КПП,", Ложь);
				КонецЕсли;	
				ТекстИННПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ИНН,", Ложь) 
					+ ?(ЗначениеЗаполнено(КПП), "/" + КПП, "");
			КонецЕсли;
			
		КонецЕсли;
		
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ЗаголовокПоставщика + ТекстПоставщика;
		ОбластьМакета.Параметры.АдресПоставщика         = ЗаголовокАдресПоставщика + ТекстАдресПоставщика;
		ОбластьМакета.Параметры.ИННпоставщика           = ЗаголовокИННпоставщика + ТекстИННпоставщика;
			
	КонецЕсли;
		
	Если ЭтоПечатьУПД Тогда
		НомерНаПечатьСтрокой 	= ОбщегоНазначения.ПолучитьНомерНаПечать(ДанныеДляПечати);
		ДатаНаПечатьСтрокой 	= Формат(ДанныеДляПечати.Дата, "ДФ='дд ММММ гггг'") + " г.";
		ОбластьМакета.Параметры.Номер = НомерНаПечатьСтрокой;
		ОбластьМакета.Параметры.Дата  =	ДатаНаПечатьСтрокой;
		ЗаголовокДляПечати = "Универсальный передаточный документ № " + НомерНаПечатьСтрокой + " от " +  ДатаНаПечатьСтрокой;
	Иначе
		ЗаголовокДляПечати = ОбщегоНазначения.СформироватьЗаголовокДокумента(ДанныеДляПечати, "Счет-фактура");
		ОбластьМакета.Параметры.Номер = ЗаголовокДляПечати;
	КонецЕсли;
	
	Если ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАванс
		ИЛИ ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитента 
		ИЛИ ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитентаНаЗакупку Тогда
		
		ОбластьМакета.Параметры.ПредставлениеГрузоотправителя = ?(ЭтоПечатьУПД, "", "Грузоотправитель и его адрес: ") + "--";
		ОбластьМакета.Параметры.ПредставлениеГрузополучателя  = ?(ЭтоПечатьУПД, "", "Грузополучатель и его адрес: ") + "--";
		
	Иначе
		
		Если ТипЗнч(ДанныеДляПечати.Грузоотправитель) = Тип("Массив")  Тогда
			СведенияОГрузоотправителе = Новый Массив;
			Для каждого Грузоотправитель Из ДанныеДляПечати.Грузоотправитель Цикл
				СведенияОГрузоотправителе.Добавить(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Грузоотправитель, Дата));
			КонецЦикла;
		Иначе
			СведенияОГрузоотправителе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(
			    ?(БезПереходаПраваСобственности, ДанныеДляПечати.Поставщик, 
					?(ДанныеДляПечати.Грузоотправитель = "он же", Неопределено, ДанныеДляПечати.Грузоотправитель)), Дата);
		КонецЕсли;
		
		ЗаголовокГрузоотправителя = ?(ЭтоПечатьУПД, "", "Грузоотправитель и его адрес: ");
		Если ТипЗнч(СведенияОГрузоотправителе) = Тип("Массив") Тогда
			ТекстГрузоотправителя = "";
			Для каждого ДанныеГрузоотправителя Из СведенияОГрузоотправителе Цикл
				ТекстГрузоотправителя = ТекстГрузоотправителя + ?(ПустаяСтрока(ТекстГрузоотправителя), "", ";")
					+ ФормированиеПечатныхФорм.ОписаниеОрганизации(ДанныеГрузоотправителя, 
						"НаименованиеДляПечатныхФорм, ФактическийАдрес,");
			КонецЦикла;
		Иначе
			ТекстГрузоотправителя = ?(НЕ ЗначениеЗаполнено(ДанныеДляПечати.Грузоотправитель), 
				"--", 
				?(ДанныеДляПечати.Грузоотправитель = "он же", "он же", 
					ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузоотправителе,  
						"НаименованиеДляПечатныхФорм, ФактическийАдрес,")));
		КонецЕсли;
		ОбластьМакета.Параметры.ПредставлениеГрузоотправителя = ЗаголовокГрузоотправителя + ТекстГрузоотправителя;
		
		Если ТипЗнч(ДанныеДляПечати.Грузополучатель) = Тип("Массив")  Тогда
			СведенияОГрузополучателе = Новый Массив;
			Для каждого Грузополучатель Из ДанныеДляПечати.Грузополучатель Цикл
				СведенияОГрузополучателе.Добавить(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Грузополучатель, Дата));
			КонецЦикла;
		Иначе
			СведенияОГрузополучателе  = ?(БезПереходаПраваСобственности, СведенияОПокупателе, 
				УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ДанныеДляПечати.Грузополучатель, Дата));
		КонецЕсли;
		
		ЗаголовокГрузополучателя = ?(ЭтоПечатьУПД, "", "Грузополучатель и его адрес: ");
		Если ТипЗнч(СведенияОГрузополучателе) = Тип("Массив") Тогда
			ТекстГрузополучателя = "";
			Для каждого ДанныеГрузополучателя Из СведенияОГрузополучателе Цикл
				ТекстГрузополучателя = ТекстГрузополучателя + ?(ПустаяСтрока(ТекстГрузополучателя), "", ";")
					+ ФормированиеПечатныхФорм.ОписаниеОрганизации(ДанныеГрузополучателя, 
						"НаименованиеДляПечатныхФорм, ФактическийАдрес,");
			КонецЦикла;
		Иначе
			Если ДанныеДляПечати.Свойство("АдресДоставки") 
				И НЕ ПустаяСтрока(ДанныеДляПечати.АдресДоставки) Тогда
				ТекстГрузополучателя = ?(НЕ ЗначениеЗаполнено(ДанныеДляПечати.Грузополучатель), 
					ДанныеДляПечати.АдресДоставки,
					ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузополучателе, 
						"НаименованиеДляПечатныхФорм") + ", " + ДанныеДляПечати.АдресДоставки);
			Иначе
				ТекстГрузополучателя = ?(НЕ ЗначениеЗаполнено(ДанныеДляПечати.Грузополучатель), 
					"--",
					ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузополучателе, 
						"НаименованиеДляПечатныхФорм, ФактическийАдрес,"));
			КонецЕсли;
		КонецЕсли;
		ОбластьМакета.Параметры.ПредставлениеГрузополучателя = ЗаголовокГрузополучателя + ТекстГрузополучателя;
		
	КонецЕсли;
	
	СтрокаПоДокументу = "";
	Если ДанныеДляПечати.Свойство("ТаблицаДатОплат") Тогда
		Для каждого ПараметрыДокументаОплаты Из ДанныеДляПечати.ТаблицаДатОплат Цикл
			
			Если НЕ ЗначениеЗаполнено(ПараметрыДокументаОплаты.НомерПлатежноРасчетногоДокумента)
				И НЕ ЗначениеЗаполнено(ПараметрыДокументаОплаты.ДатаПлатежноРасчетногоДокумента) Тогда
				Продолжить;
			КонецЕсли;
			СтрокаПоДокументу = СтрокаПоДокументу
				+ ?(ПустаяСтрока(СтрокаПоДокументу), ?(ЭтоПечатьУПД, "", "К платежно-расчетному документу № "),", ")
				+ ПараметрыДокументаОплаты.НомерПлатежноРасчетногоДокумента 
				+ " от " + Формат(ПараметрыДокументаОплаты.ДатаПлатежноРасчетногоДокумента, "ДФ=dd.MM.yyyy") + " г.";
			
		КонецЦикла;
	Конецесли;
	
	Если ПустаяСтрока(СтрокаПоДокументу) Тогда
		Если ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАванс
			ИЛИ ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитента
			ИЛИ ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитентаНаЗакупку Тогда
			СтрокаПоДокументу = ?(ЭтоПечатьУПД, "", "К платежно-расчетному документу № ") + "-- от --";
		Иначе
			СтрокаПоДокументу = ?(ЭтоПечатьУПД, "", "К платежно-расчетному документу № ") + "   от";
		КонецЕсли; 
	КонецЕсли; 
	
	Если ЭтоПечатьУПД И ДанныеДляПечати.СтатусУПД = 2 Тогда
		
		// В УПД в статусе 2 ставятся прочерки показатели, установленные в качестве обязательных исключительно для счета-фактуры: 
		// - «К платежно-расчетному документу» (строка 7); 
		СтрокаПоДокументу = "--";
	КонецЕсли;
	
	ОбластьМакета.Параметры.ПоДокументу = СтрокаПоДокументу;
	
	Если БезПереходаПраваСобственности Тогда
		
		ОбластьМакета.Параметры.ПредставлениеПокупателя = "--";
		ОбластьМакета.Параметры.АдресПокупателя 		= "--";
		ОбластьМакета.Параметры.ИННПокупателя 			= "--";
		
	Иначе
		
		ЗаголовокПокупателя      = ?(ЭтоПечатьУПД, "", "Покупатель: ");
		ЗаголовокАдресПокупателя = ?(ЭтоПечатьУПД, "", "Адрес: ");
		ЗаголовокИННПокупателя   = ?(ЭтоПечатьУПД, "", "ИНН/КПП покупателя: ");
		
		Если ТипЗнч(СведенияОПокупателе) = Тип("Массив") Тогда
			
			ТекстПокупателя      = "";
			ТекстАдресПокупателя = "";
			ТекстИННПокупателя   = "";
			
			Для Индекс = 0 По СведенияОПокупателе.ВГраница() Цикл
				
				ДанныеОПокупателе = СведенияОПокупателе[Индекс];
				ДанныеОПодразделенииПокупателя = СведенияОПодразделенииПокупателя[Индекс];
			
				ТекстПокупателя = ТекстПокупателя + ?(ПустаяСтрока(ТекстПокупателя), "", ";")
					+ ФормированиеПечатныхФорм.ОписаниеОрганизации(ДанныеОПокупателе, "НаименованиеДляПечатныхФорм,");
				ТекстАдресПокупателя = ТекстАдресПокупателя + ?(ПустаяСтрока(ТекстАдресПокупателя), "", ";")
					+ ФормированиеПечатныхФорм.ОписаниеОрганизации(ДанныеОПокупателе, "ЮридическийАдрес,");
				Если ДанныеОПодразделенииПокупателя <> Неопределено Тогда
					КПП = ФормированиеПечатныхФорм.ОписаниеОрганизации(ДанныеОПодразделенииПокупателя, "КПП,", Ложь);
				Иначе
					КПП = ФормированиеПечатныхФорм.ОписаниеОрганизации(ДанныеОПокупателе, "КПП,", Ложь);
				КонецЕсли;
				ТекстИННПокупателя = ТекстИННПокупателя + ?(ПустаяСтрока(ТекстИННПокупателя), "", ";")
					+ ФормированиеПечатныхФорм.ОписаниеОрганизации(ДанныеОПокупателе, "ИНН,", Ложь) 
					+ ?(ЗначениеЗаполнено(КПП), "/" + КПП, "");
				
			КонецЦикла;
		
		Иначе
		
			ТекстПокупателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "НаименованиеДляПечатныхФорм,");
			ТекстАдресПокупателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ЮридическийАдрес,");
				
			Если ДанныеДляПечати.Свойство("КППКонтрагента") И ЗначениеЗаполнено(ДанныеДляПечати.КППКонтрагента) Тогда
				КПП = ДанныеДляПечати.КППКонтрагента;
			ИначеЕсли СведенияОПодразделенииПокупателя <> Неопределено Тогда
				КПП = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПодразделенииПокупателя, "КПП,", Ложь);
			Иначе
				КПП = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "КПП,", Ложь);
			КонецЕсли;
			ТекстИННПокупателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ИНН,", Ложь)
				+ ?(ЗначениеЗаполнено(КПП), "/" + КПП, "");
		
		КонецЕсли;
			
		ОбластьМакета.Параметры.ПредставлениеПокупателя = ЗаголовокПокупателя + ТекстПокупателя;
		ОбластьМакета.Параметры.АдресПокупателя         = ЗаголовокАдресПокупателя + ТекстАдресПокупателя;
		ОбластьМакета.Параметры.ИННПокупателя           = ЗаголовокИННПокупателя + ТекстИННПокупателя;
			
	КонецЕсли;
	
	ОбластьМакета.Параметры.Валюта = ?(ЭтоПечатьУПД, "", "Валюта: наименование, код ")
		+ ?(ЗначениеЗаполнено(ДанныеДляПечати.Валюта), 
		ДанныеДляПечати.Валюта.НаименованиеПолное + ", " + ДанныеДляПечати.Валюта.Код, 
		"");		
			
	ТабДокумент.Вывести(ОбластьМакета);
	
	Если ВедетсяУчетНДСПоФЗ56 Тогда 
		ОбластьМакета = Макет.ПолучитьОбласть("ИдентификаторГосКонтракта");
		Если ЭтоПечатьУПД Тогда 
			ОбластьМакета.Параметры.ИдентификаторГосКонтракта = ДанныеДляПечати.ИдентификаторГосКонтракта;
		Иначе
			ШаблонЗаголовкаГосконтракт = НСтр("ru = 'Идентификатор государственного контракта, договора (соглашения): %1'");
			ОбластьМакета.Параметры.ИдентификаторГосКонтракта = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонЗаголовкаГосконтракт, ДанныеДляПечати.ИдентификаторГосКонтракта);
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЕсли;
	
	ЭтоСчетФактураОтИмениПродавца = Ложь;
	
	Если ТипЗнч(ДанныеДляПечати.Ссылка) = Тип("ДокументСсылка.СчетФактураВыданный")
		И ТипЗнч(ДанныеДляПечати.Покупатель) = Тип("СправочникСсылка.Контрагенты") 
		И (ТипЗнч(ДанныеДляПечати.Поставщик) = Тип("СправочникСсылка.Контрагенты")
		ИЛИ ТипЗнч(ДанныеДляПечати.Поставщик) = Тип("Массив")) Тогда
			
		ЭтоСчетФактураОтИмениПродавца = Истина;
			
	КонецЕсли;
	
	// Выводим заголовок таблицы
	
	ОбластьМакетаЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ОбластьМакетаЗаголовокТаблицы.Параметры.Заполнить(ДанныеДляПечати);
	ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
	
	// Дополнительная подготовка данных для вывода в табличную часть
	
	ТаблицаСтрокТовары = ДанныеДляПечати.ТабличнаяЧасть;
 	ТаблицаСтрокТовары.Колонки.Добавить("СуммаБезНДС");
	ТаблицаСтрокТовары.Колонки.Добавить("СуммаСНДС");

	Для Каждого Строчка Из ТаблицаСтрокТовары Цикл
		
		Строчка.СуммаСНДС = Строчка.Сумма + ?(Строчка.СуммаВключаетНДС, 0, Строчка.СуммаНДС);
		Строчка.СуммаБезНДС = Строчка.СуммаСНДС - Строчка.СуммаНДС;
		
		Если Строчка.СуммаВключаетНДС Тогда
			Строчка.Цена = 0;
		КонецЕсли;
		
		Если ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаРеализацию 
			И Строчка.Количество <> 0
			И (Строчка.СтавкаНДС = Перечисления.СтавкиНДС.НДС20_120
			ИЛИ Строчка.СтавкаНДС = Перечисления.СтавкиНДС.НДС18_118
			ИЛИ Строчка.СтавкаНДС = Перечисления.СтавкиНДС.НДС10_110) Тогда
			
			Строчка.Цена = Окр(Строчка.СуммаСНДС / Строчка.Количество, 2);
			
		КонецЕсли;	
					
		Если НЕ ЗначениеЗаполнено(Строчка.ЕдиницаИзмерения) Тогда
			Строчка.Количество = 0;
			Строчка.Цена = 0;
		ИначеЕсли Строчка.Количество = 0 Тогда
			Строчка.ЕдиницаИзмерения = "";
			Строчка.Цена = 0;
		ИначеЕсли Строчка.Цена = 0 Тогда
			Строчка.Цена = Окр(Строчка.СуммаБезНДС / Строчка.Количество, 2);
		КонецЕсли;
		
		Если ДанныеДляПечати.Дата >= '20160701'
		   И Строчка.СтавкаНДС = Перечисления.СтавкиНДС.НДС0
		   И ЗначениеЗаполнено(Строчка.ТоварКодТНВЭД) Тогда
			// Дополняем наименование товара информацией о коде ТН ВЭД
			Строчка.ТоварНаименование = Строчка.ТоварНаименование + ", код ТН ВЭД " + СокрЛП(Строчка.ТоварКодТНВЭД);
		КонецЕсли;
		
	КонецЦикла;
	
	// Нужно закомментировать, Чтоб не группировалась номенклатура
	КолонкиДляСвертки = ?(ТаблицаСтрокТовары.Колонки.Найти("Контрагент") <> Неопределено, "Контрагент,", "")
		+ "Товар,ТоварНаименование,ТоварКод,СтранаПроисхождения,СтранаПроисхожденияКод,ПредставлениеСтраны,"
		+ "НомерГТД,ПредставлениеГТД,ЕдиницаИзмерения,ЕдиницаИзмеренияКод,Цена,СтавкаНДС";
	ТаблицаСтрокТовары.Свернуть(КолонкиДляСвертки, "Количество,Сумма,СуммаНДС,СуммаСНДС,СуммаБезНДС");
	//&_Галимов_Закомментировано 17.03.2017 10:44:53 
	
	ТаблицаСтрокТовары.Колонки.Добавить("НомерСтроки", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(10, 0));
	НомерСтроки = 0;
	Для Каждого Строчка Из ТаблицаСтрокТовары Цикл
		НомерСтроки = НомерСтроки + 1;
		Строчка.НомерСтроки = НомерСтроки;
	КонецЦикла;
	
	// Выводим строки таблицы
	
	ОбластьМакета       = Макет.ПолучитьОбласть("Строка");
	ОбластьМакетаИтого  = Макет.ПолучитьОбласть("Итого");
	ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал");
	Если ЭтоПечатьУПД Тогда
		ОбластьМакетаПодвалНакладной = Макет.ПолучитьОбласть("ПодвалНакладной");
	Иначе
		ОбластьМакетаПодвалНакладной = Новый ТабличныйДокумент;
	КонецЕсли;
	КоличествоСтраниц = 1;
	
	КоличествоСтрок = ТаблицаСтрокТовары.Количество();
	
	ИтогоСтоимость = 0;
	ИтогоСуммаНДС  = 0;
	ИтогоВсего     = 0;
	
	Для Каждого Строчка Из ТаблицаСтрокТовары Цикл
		
		ОбластьМакета.Параметры.Заполнить(Строчка);
		
		Если НЕ ЗначениеЗаполнено(Строчка.ТоварНаименование) Тогда
			ОбластьМакета.Параметры.ТоварНаименование = Строчка.Товар;
		КонецЕсли;
		ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(ОбластьМакета.Параметры.ТоварНаименование);
		
		Если ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаРеализацию Тогда
			ОбластьМакета.Параметры.Стоимость = Строчка.СуммаБезНДС;
			ОбластьМакета.Параметры.Цена      = Строчка.Цена;
		Иначе
			Если ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НалоговыйАгент
				ИЛИ ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаСуммовуюРазницу Тогда
				ОбластьМакета.Параметры.Стоимость = Строчка.СуммаБезНДС;
			Иначе
				ОбластьМакета.Параметры.Стоимость = 0;
			КонецЕсли;
			ОбластьМакета.Параметры.Количество = 0;
			ОбластьМакета.Параметры.Цена       = 0;
		КонецЕсли;
		
		ОбластьМакета.Параметры.Всего     = Строчка.СуммаСНДС;
		ОбластьМакета.Параметры.СтавкаНДС = Строчка.СтавкаНДС;
		
		Если Строчка.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
			ОбластьМакета.Параметры.СтавкаНДС = "без НДС";
			ОбластьМакета.Параметры.СуммаНДС  = "без НДС";
		КонецЕсли;
		
		Если ДанныеДляПечати.ВидСчетаФактуры <> Перечисления.ВидСчетаФактурыВыставленного.НаАванс
			И ДанныеДляПечати.ВидСчетаФактуры <> Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитента 
			И ДанныеДляПечати.ВидСчетаФактуры <> Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитентаНаЗакупку Тогда
			ОбластьМакета.Параметры.Акциз = "без акциза";
		КонецЕсли;
		
		Если Строка(Строчка.ПредставлениеСтраны) = "Россия" 
			ИЛИ Строка(Строчка.ПредставлениеСтраны) = "Российская Федерация"
			ИЛИ Строчка.СтранаПроисхождения = Справочники.КлассификаторСтранМира.РОССИЯ Тогда
			ОбластьМакета.Параметры.ПредставлениеСтраны    = "--";
			ОбластьМакета.Параметры.СтранаПроисхожденияКод = "--";
			ОбластьМакета.Параметры.ПредставлениеГТД       = "--";
		Иначе
			Если ЗначениеЗаполнено(Строчка.СтранаПроисхождения) Тогда
				ОбластьМакета.Параметры.ПредставлениеСтраны  = СокрЛП(Строчка.СтранаПроисхождения.Наименование);
			Иначе
				ОбластьМакета.Параметры.СтранаПроисхожденияКод = "--";
				ОбластьМакета.Параметры.ПредставлениеСтраны    = "--";
				ОбластьМакета.Параметры.ПредставлениеГТД       = "--";
			КонецЕсли;
		КонецЕсли; 
		
		// Проставляем прочерки в незаполненные графы в соответствии с Постановлением
		Если ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАванс
			ИЛИ ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитента 
			ИЛИ ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитентаНаЗакупку Тогда
			
			ОбластьМакета.Параметры.ЕдиницаИзмерения    = "--";
			ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "--";
			
			ОбластьМакета.Параметры.Количество = "--";
			ОбластьМакета.Параметры.Цена       = "--";
			ОбластьМакета.Параметры.Стоимость  = "--";
			ОбластьМакета.Параметры.Акциз      = "--";
			
			ОбластьМакета.Параметры.СтранаПроисхожденияКод = "--";
			ОбластьМакета.Параметры.ПредставлениеСтраны    = "--";
			ОбластьМакета.Параметры.ПредставлениеГТД       = "--";
			
		Иначе
			
			Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.ЕдиницаИзмерения) Тогда
				ОбластьМакета.Параметры.ЕдиницаИзмерения    = "--";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "--";
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.ЕдиницаИзмеренияКод) Тогда
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "--";
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.Количество) Тогда
				ОбластьМакета.Параметры.Количество = "--";
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.Цена) Тогда
				ОбластьМакета.Параметры.Цена = "--";
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЭтоПечатьУПД 
			И ДанныеДляПечати.СтатусУПД = 2 Тогда
			
			// Ставим прочерки в графах, которые установленные в качестве обязательных исключительно для счета-фактуры
			//- «В том числе сумма акциза» (графа 6); 
			//- «Налоговая ставка» (графа 7);
			//- «Цифровой код страны происхождения товара» (графа 10);
			//- «Краткое наименование страны происхождения товара» (графа 10а);
			//- «Номер таможенной декларации» (графа 11). 
			
			ОбластьМакета.Параметры.Акциз 		= "--";
			ОбластьМакета.Параметры.СтавкаНДС 	= "--";
			ОбластьМакета.Параметры.СуммаНДС 	= ?(Строчка.СуммаНДС <> 0 , Строчка.СуммаНДС, "--");
			ОбластьМакета.Параметры.СтранаПроисхожденияКод 	= "--";
			ОбластьМакета.Параметры.ПредставлениеСтраны 	= "--";
			ОбластьМакета.Параметры.ПредставлениеГТД 		= "--";
			
		КонецЕсли;
		
		// Проверим возможность вывода табличного документа
		СтрокаСПодвалом = Новый Массив;
		СтрокаСПодвалом.Добавить(ОбластьМакета);
		Если Строчка.НомерСтроки = КоличествоСтрок Тогда
			// Если последняя строка, то должен поместится итог и подвал
			СтрокаСПодвалом.Добавить(ОбластьМакетаИтого);
			СтрокаСПодвалом.Добавить(ОбластьМакетаПодвал);
			Если ЭтоПечатьУПД Тогда
				СтрокаСПодвалом.Добавить(ОбластьМакетаПодвалНакладной);
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом) Тогда
			
			Если КоличествоСтрок > 0 Тогда
				// Вывод разделителя и заголовка таблицы на новой странице
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
				КоличествоСтраниц = КоличествоСтраниц + 1;
			КонецЕсли;
			
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);

		ИтогоСтоимость = ИтогоСтоимость + Строчка.СуммаБезНДС;
		ИтогоСуммаНДС  = ИтогоСуммаНДС + Строчка.СуммаНДС;
		ИтогоВсего     = ИтогоВсего    + Строчка.СуммаСНДС;
		
	КонецЦикла;
	
	КоличествоЛистов = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Документ составлен на%1%2 %3'"), Символы.ПС, КоличествоСтраниц,
		ОбщегоНазначения.ФормаМножественногоЧисла(
			НСтр("ru = 'листе'"), НСтр("ru = 'листах'"), НСтр("ru = 'листах'"), КоличествоСтраниц));
	ДанныеДляПечати.Вставить("КоличествоЛистов", КоличествоЛистов);
	
	Если ТаблицаСтрокТовары.Количество() > 0 Тогда
		ТабДокумент.Область(ТабДокумент.ВысотаТаблицы,,ТабДокумент.ВысотаТаблицы,).ВместеСоСледующим = Истина;
	КонецЕсли; 
	
	// Выводим строку "Всего к оплате"
	
	Если ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАванс
		ИЛИ ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитента 
		ИЛИ ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитентаНаЗакупку Тогда
		ОбластьМакетаИтого.Параметры.ИтогоСтоимость = "--";
	Иначе
		ОбластьМакетаИтого.Параметры.ИтогоСтоимость = ИтогоСтоимость;
	КонецЕсли;
	
	Если ЭтоПечатьУПД И ДанныеДляПечати.СтатусУПД = 2 Тогда
	    ОбластьМакетаИтого.Параметры.ИтогоСуммаНДС = ?(ИтогоСуммаНДС <> 0, ИтогоСуммаНДС, "--");
	ИначеЕсли ДанныеДляПечати.СчетФактураБезНДС Тогда
		ОбластьМакетаИтого.Параметры.ИтогоСуммаНДС = "без НДС";
	Иначе
		ОбластьМакетаИтого.Параметры.ИтогоСуммаНДС = ИтогоСуммаНДС;
	КонецЕсли;
	ОбластьМакетаИтого.Параметры.ИтогоВсего = ИтогоВСего;
	
	ТабДокумент.Вывести(ОбластьМакетаИтого);
		
	// Выводим подвал
	
	ОбластьМакетаПодвал.Параметры.Заполнить(ДанныеДляПечати);
	
	Если ЭтоСчетФактураОтИмениПродавца Тогда
		СведенияОКомиссионере = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ДанныеДляПечати.Организация, Дата);
		ОбластьМакетаПодвал.Параметры.Свидетельство = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОКомиссионере, "Свидетельство,");
	ИначеЕсли ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НалоговыйАгент Тогда
		ОбластьМакетаПодвал.Параметры.Свидетельство = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "Свидетельство,");
	ИначеЕсли ТипЗнч(СведенияОПоставщике) <> Тип("Массив") Тогда
		ОбластьМакетаПодвал.Параметры.Свидетельство = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "Свидетельство,");
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьМакетаПодвал);
	
		
	Если ЭтоСчетФактураОтИмениПродавца И НЕ ЭтоПечатьУПД Тогда
		ВывестиРеквизитыКомиссионера(ДанныеДляПечати.Организация, ДанныеДляПечати.Поставщик, ДанныеДляПечати.Покупатель, Дата, Макет, ТабДокумент);
	КонецЕсли;
	
	// Устанавливаем параметры печати и колонтитулы
	
	Если ТипЗнч(ДанныеДляПечати.ДокументОснование) <> Тип("ДокументСсылка.ОказаниеУслуг") Тогда
		ТабДокумент.ВерхнийКолонтитул.Выводить          = Истина;
		ТабДокумент.ВерхнийКолонтитул.НачальнаяСтраница = 2;
		ТабДокумент.ВерхнийКолонтитул.ВертикальноеПоложение = ВертикальноеПоложение.Низ;
		ТабДокумент.ВерхнийКолонтитул.ТекстСлева   = ЗаголовокДляПечати;
		ТабДокумент.ВерхнийКолонтитул.ТекстСправа  = "Лист [&НомерСтраницы]";
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиРеквизитыКомиссионера(Организация, Поставщик, Покупатель, Дата, Макет, ТабДокумент)
	
	Если ТипЗнч(Покупатель) = Тип("СправочникСсылка.Контрагенты") 
		И (ТипЗнч(Поставщик) = Тип("СправочникСсылка.Контрагенты")
		ИЛИ ТипЗнч(Поставщик) = Тип("Массив")) Тогда
		
		ОбластьМакета = Макет.ПолучитьОбласть("РеквизитыКомиссионера");
		
		СведенияОКомиссионере = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, Дата);
		
		НаименованиеКомиссионера = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОКомиссионере, "НаименованиеДляПечатныхФорм,");
		ЮридическийАдресКомиссионера = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОКомиссионере, "ЮридическийАдрес,");
		ИННКомиссионера = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОКомиссионере, "ИНН,", Ложь);
		КППКомиссионера = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОКомиссионере, "КПП,", Ложь);
		
		ОбластьМакета.Параметры.ПредставлениеКомиссионера = "Составлен комиссионером (агентом): " + НаименованиеКомиссионера 
			+ ", " + ЮридическийАдресКомиссионера 
			+ ", ИНН/КПП: " + ИННКомиссионера 
			+ ?(ЗначениеЗаполнено(КППКомиссионера), "/" + КППКомиссионера, "");
		
		ТабДокумент.Вывести(ОбластьМакета);
		
	КонецЕсли;
	
КонецПроцедуры

Функция СчетФактураОбъектПечатьУниверсальногоПередаточногоДокумента(ДанныеДляПечати)
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Устанавливаем параметры печати и колонтитулы
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ПолеСверху = 12;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_УниверсальныйПередаточныйДокумент";
	
	Макет = ПолучитьОбщийМакет("УниверсальныйПередаточныйДокумент");
	
	ВывестиСчетФактуруВТабличныйДокумент(ТабДокумент, Макет, ДанныеДляПечати);
	
	УчетНДС.ВывестиПодвалУниверсальногоПередаточногоДокументаВТабличныйДокумент(ТабДокумент, Макет, ДанныеДляПечати);
	
	Возврат ТабДокумент;

КонецФункции