Функция Печать() Экспорт
	
	ТабДок = ДопПечать();
	Возврат ТабДок;
	
КонецФункции

Функция ДопПечать()
	
	СчетФактура = УчетНДС.НайтиПодчиненныйСчетФактуру(СсылкаНаОбъект, "СчетФактураВыданный");
	
	Если НЕ ЗначениеЗаполнено(СчетФактура) Тогда
		ТекстСообщения = "По документу %1 не выписан счет-фактура. Печать невозможна";
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		ТекстСообщения, СсылкаНаОбъект);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат Неопределено;
	КонецЕсли;
	
	Если НЕ СчетФактура.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.Корректировочный Тогда
		
		ОбщиеДанныеДляПечати = СчетФактура.ПолучитьОбъект().ПодготовитьОбщиеДанныеДляПечатиСчетаФактуры();
		
		Если ОбщиеДанныеДляПечати = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		Если УчетНДС.ПолучитьВерсиюПостановления(СсылкаНаОбъект.Дата) = 1 Тогда
			ТабДокумент = ПечатьСчетаФактуры(ОбщиеДанныеДляПечати, СчетФактура);
		Иначе
			ТабДокумент = ПечатьСчетаФактуры1137(ОбщиеДанныеДляПечати);
		КонецЕсли;	
		
	Иначе // Корректировочный счет-фактура
		
		ОбщиеДанныеДляПечати = ПодготовитьОбщиеДанныеДляПечатиКорректировочногоСчетаФактуры(СчетФактура);
		
		Если ОбщиеДанныеДляПечати = Неопределено Тогда
			ТабДокумент = Неопределено;
		Иначе
			Если УчетНДС.ПолучитьВерсиюПостановления(СсылкаНаОбъект.Дата) = 1 Тогда
				ТабДокумент = СчетФактура.ПолучитьОбъект().ПечатьКорректировочногоСчетаФактуры(ОбщиеДанныеДляПечати);
			Иначе
				ТабДокумент = СчетФактура.ПолучитьОбъект().ПечатьКорректировочногоСчетаФактуры1137(ОбщиеДанныеДляПечати);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ТабДокумент;
	
КонецФункции

// Функция создает табличный документ ун. формы счета-фактуры
//
// Параметры 
//  ДанныеДляПечати - типизированная структура данных для заполнения параметров макета
//
Функция ПечатьСчетаФактуры(ДанныеДляПечати, СчетФактура) Экспорт
	
	Дата = СчетФактура.Дата;
	ВидСчетаФактуры = СчетФактура.ВидСчетаФактур;
	ДоговорКонтрагента = СчетФактура.ДоговорКонтрагента;
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ПолеСверху = 13;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	
	Если Дата < '20090609' Тогда
		ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СчетФактураВыданный_СчетФактура283";
	Иначе
		ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СчетФактураВыданный_СчетФактура451";
	КонецЕсли;

	Если Дата < '20090609' Тогда
		Макет = ПолучитьОбщийМакет("СчетФактура283");
	Иначе
		Макет = ПолучитьОбщийМакет("СчетФактура451");
	КонецЕсли;
	
	СведенияОбПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ДанныеДляПечати.Покупатель, Дата);
	СведенияОПоставщике  = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ДанныеДляПечати.Поставщик, Дата);
	СведенияОГрузоотправителе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(?(ДанныеДляПечати.Грузоотправитель = "он же", Неопределено, ДанныеДляПечати.Грузоотправитель), Дата);
	СведенияОГрузополучателе  = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ДанныеДляПечати.Грузополучатель, Дата);
	// Выводим шапку
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(ДанныеДляПечати);
	ЗаголовокДляПечати = ОбщегоНазначения.СформироватьЗаголовокДокумента(ДанныеДляПечати, "Счет-фактура");
	ОбластьМакета.Параметры.Номер = ЗаголовокДляПечати;
	
	Если ДанныеДляПечати.Свойство("АдресДоставки") 
		И НЕ ПустаяСтрока(ДанныеДляПечати.АдресДоставки) Тогда
		ПредставлениеГрузополучателя = "Грузополучатель и его адрес: " 
			+ ?(НЕ ЗначениеЗаполнено(ДанныеДляПечати.Грузополучатель), 
			ДанныеДляПечати.АдресДоставки,
			ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузополучателе, "НаименованиеДляПечатныхФорм") + ", " + ДанныеДляПечати.АдресДоставки);
	Иначе
		ПредставлениеГрузополучателя = "Грузополучатель и его адрес: " 
			+ ?(НЕ ЗначениеЗаполнено(ДанныеДляПечати.Грузополучатель), 
			"",
			ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузополучателе, "НаименованиеДляПечатныхФорм, ФактическийАдрес,"));
	КонецЕсли;

	Если Дата < '20090609' 
		ИЛИ ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НалоговыйАгент Тогда
		ОбластьМакета.Параметры.ПредставлениеПоставщика = "Продавец: " 
			+ ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "НаименованиеДляПечатныхФорм,");
	Иначе
		ОбластьМакета.Параметры.ПредставлениеПоставщика = "Продавец: " 
			+ ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,");
		СокращенноеНаименование = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "СокращенноеНаименование,", Ложь);
		Если НЕ ПустаяСтрока(СокращенноеНаименование) Тогда
			ОбластьМакета.Параметры.ПредставлениеПоставщика = ОбластьМакета.Параметры.ПредставлениеПоставщика + " (" + СокращенноеНаименование + ")";
		КонецЕсли;
	КонецЕсли;
	
	ОбластьМакета.Параметры.АдресПоставщика = "Адрес: " + ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ЮридическийАдрес,");
	
	Если НЕ (ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НалоговыйАгент
		И ДоговорКонтрагента.ВидАгентскогоДоговора = Перечисления.ВидыАгентскихДоговоров.Нерезидент) Тогда
		
		КПП = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "КПП,", Ложь);
		Если ЗначениеЗаполнено(КПП) Тогда
			КПП = "/" + КПП;
		КонецЕсли;
		ОбластьМакета.Параметры.ИННпоставщика = "ИНН/КПП продавца: "
			+ ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ИНН,", Ложь) + КПП;
			
	Иначе
		ОбластьМакета.Параметры.ИННпоставщика = "ИНН/КПП продавца: "
	КонецЕсли;
		
	ОбластьМакета.Параметры.ПредставлениеГрузоотправителя = "Грузоотправитель и его адрес: "
		+ ?(НЕ ЗначениеЗаполнено(ДанныеДляПечати.Грузоотправитель), 
		"", 
		?(ДанныеДляПечати.Грузоотправитель = "он же", 
			ДанныеДляПечати.Грузоотправитель, 
			ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузоотправителе,  "НаименованиеДляПечатныхФорм,ФактическийАдрес,")));
	
	ОбластьМакета.Параметры.ПредставлениеГрузополучателя  = ПредставлениеГрузополучателя;

	Строка_ПоДокументу = "";
	Для каждого ПараметрыДокументаОплаты Из ДанныеДляПечати.ТаблицаДатОплат Цикл
		Строка_ПоДокументу = Строка_ПоДокументу+ ?(ПустаяСтрока(Строка_ПоДокументу), "К платежно-расчетному документу № ",", ")
			+ ПараметрыДокументаОплаты.НомерПлатежноРасчетногоДокумента 
			+ " от " + Формат(ПараметрыДокументаОплаты.ДатаПлатежноРасчетногоДокумента, "ДФ=dd.MM.yyyy");
	КонецЦикла; 
	Если ПустаяСтрока(Строка_ПоДокументу) Тогда
		Строка_ПоДокументу = "К платежно-расчетному документу № -- от --"
	КонецЕсли; 
	ОбластьМакета.Параметры.ПоДокументу                   = Строка_ПоДокументу;
	
	ОбластьМакета.Параметры.ПредставлениеПокупателя = "Покупатель: " 
		+ ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбПокупателе, "НаименованиеДляПечатныхФорм,");
	ОбластьМакета.Параметры.АдресПокупателя = "Адрес: "
		+ ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбПокупателе, "ЮридическийАдрес,");
	КПП = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбПокупателе, "КПП,", Ложь);
	Если ЗначениеЗаполнено(КПП) Тогда
		КПП = "/" + КПП;
	КонецЕсли;
	ОбластьМакета.Параметры.ИННПокупателя = "ИНН/КПП покупателя: "
		+ ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбПокупателе, "ИНН,", Ложь) + КПП;
		
	ПроставитьПрочеркиВПустыеПоля(ОбластьМакета);
	ТабДокумент.Вывести(ОбластьМакета);

	// Выводим заголовок таблицы
	ОбластьМакетаЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ОбластьМакетаЗаголовокТаблицы.Параметры.Заполнить(ДанныеДляПечати);
	ОбластьМакетаЗаголовокТаблицы.Параметры.Валюта = "Валюта: " + ДанныеДляПечати.Валюта;
	ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
	
	ВыборкаСтрокТовары = ДанныеДляПечати.ТабличнаяЧасть;
 	ВыборкаСтрокТовары.Колонки.Добавить("СуммаБезНДС");
	ВыборкаСтрокТовары.Колонки.Добавить("СуммаСНДС");

	Для Каждого Строчка Из ВыборкаСтрокТовары Цикл
		
		Строчка.СуммаСНДС = Строчка.Сумма + ?(Строчка.СуммаВключаетНДС, 0, Строчка.СуммаНДС);

		Если ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаРеализацию 
			И ((Строчка.СтавкаНДС = Перечисления.СтавкиНДС.НДС20_120)
		 	ИЛИ (Строчка.СтавкаНДС = Перечисления.СтавкиНДС.НДС18_118)
		 	ИЛИ (Строчка.СтавкаНДС = Перечисления.СтавкиНДС.НДС10_110)) Тогда
			Строчка.СуммаБезНДС = Строчка.СуммаСНДС;
			Если НЕ Строчка.СуммаВключаетНДС Тогда
				Строчка.Цена = 0;
			КонецЕсли;
		Иначе
			Строчка.СуммаБезНДС = Строчка.СуммаСНДС - Строчка.СуммаНДС;
			Если Строчка.СуммаВключаетНДС Тогда
				Строчка.Цена = 0;
			КонецЕсли;
		КонецЕсли;
		
		Если Строчка.Цена = 0 Тогда
			Строчка.Цена = ?(Строчка.Количество = 0, 0, Окр(Строчка.СуммаБезНДС / Строчка.Количество, 2));
		КонецЕсли;
		
	КонецЦикла;
	
	//&_Галимов_Закомментировано 17.03.2017 10:52:56 
	//ВыборкаСтрокТовары.Свернуть("Товар, ТоварНаименование, СтранаПроисхождения, ПредставлениеСтраны, НомерГТД, ПредставлениеГТД, ЕдиницаИзмерения, Цена, СтавкаНДС", "Количество, Сумма, СуммаНДС, СуммаСНДС, СуммаБезНДС");
	//&_Галимов_Закомментировано 17.03.2017 10:52:58 
	
	// Выводим строки таблицы
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакетаИтого = Макет.ПолучитьОбласть("Итого");
	
	НомерСтроки = 0;
	КоличествоСтрок = ВыборкаСтрокТовары.Количество();

	ИтогоСуммаНДС = 0;
	ИтогоВсего    = 0;
    	
	Для Каждого Строчка Из ВыборкаСтрокТовары Цикл
		
		НомерСтроки = НомерСтроки + 1;
		
		ОбластьМакета.Параметры.Заполнить(Строчка);

		Если НЕ ЗначениеЗаполнено(Строчка.ТоварНаименование) Тогда
			ОбластьМакета.Параметры.ТоварНаименование = Строчка.Товар;
		КонецЕсли;
		ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(ОбластьМакета.Параметры.ТоварНаименование);
		
		Если Строка(Строчка.ПредставлениеСтраны) = "Россия" 
			ИЛИ Строка(Строчка.ПредставлениеСтраны) = "Российская Федерация"
			ИЛИ Строчка.СтранаПроисхождения = Справочники.КлассификаторСтранМира.РОССИЯ Тогда			
			ОбластьМакета.Параметры.ПредставлениеСтраны  = "--";
		КонецЕсли; 
	
		ОчищатьКоличество = Неопределено;
		ОчищатьКоличество = ?(ДанныеДляПечати.Свойство("ОчищатьКоличество", ОчищатьКоличество), ОчищатьКоличество, Истина);
		
		Если ОчищатьКоличество 
			И ТипЗнч(ОбластьМакета.Параметры.Товар) <> Тип("СправочникСсылка.ОсновныеСредства") 
			И (ОбластьМакета.Параметры.ЕдиницаИзмерения = "--" 
			ИЛИ НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.ЕдиницаИзмерения)) Тогда
			Строчка.Количество = 0;
		КонецЕсли;
		
		Если ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАванс
			ИЛИ ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитента
			ИЛИ ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаСуммовуюРазницу 
			ИЛИ ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НалоговыйАгент Тогда
			
			Если ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НалоговыйАгент Тогда
				ОбластьМакета.Параметры.Стоимость  = Строчка.СуммаБезНДС;
			Иначе
				// В счетах-фактурах на аванс колонка 5 не выводится
				ОбластьМакета.Параметры.Стоимость = 0;
			КонецЕсли;
			
			ОбластьМакета.Параметры.Количество = 0;
			ОбластьМакета.Параметры.Цена       = 0;
			
		Иначе
			ОбластьМакета.Параметры.Стоимость = Строчка.СуммаБезНДС;
			ОбластьМакета.Параметры.Цена   	  = Строчка.Цена;
		КонецЕсли;	
			
		ОбластьМакета.Параметры.Всего     = Строчка.СуммаСНДС;
		ОбластьМакета.Параметры.СтавкаНДС = Строчка.СтавкаНДС;
		
		// Колонка "Единица измерения" быть заполнена только при заполненной колонке "Количество"
		Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.Количество)
			И ЗначениеЗаполнено(ОбластьМакета.Параметры.ЕдиницаИзмерения) Тогда
			ОбластьМакета.Параметры.ЕдиницаИзмерения = Неопределено;
		КонецЕсли;

		// Проверим возможность вывода табличного документа
		СтрокаСПодвалом = Новый Массив;
		СтрокаСПодвалом.Добавить(ОбластьМакета);
		Если НомерСтроки = КоличествоСтрок Тогда
			// Если последняя строка, то должен поместится итог и подвал
			СтрокаСПодвалом.Добавить(ОбластьМакетаИтого);
			СтрокаСПодвалом.Добавить(ОбластьМакетаПодвал);
		КонецЕсли;
						
		Если НЕ ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом) Тогда
			
			Если КоличествоСтрок > 0 Тогда
				// Вывод разделителя и заголовка таблицы на новой странице
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
			КонецЕсли;
			
		КонецЕсли;
		
		ПроставитьПрочеркиВПустыеПоля(ОбластьМакета);
		
		ТабДокумент.Вывести(ОбластьМакета);

		ИтогоСуммаНДС = ИтогоСуммаНДС + Строчка.СуммаНДС;
		ИтогоВсего    = ИтогоВсего    + Строчка.СуммаСНДС;
        	
	КонецЦикла;

	Если ВыборкаСтрокТовары.Количество() > 0 Тогда
		ТабДокумент.Область(ТабДокумент.ВысотаТаблицы,,ТабДокумент.ВысотаТаблицы,).ВместеСоСледующим = Истина;
	КонецЕсли; 
		
	ОбластьМакетаИтого.Параметры.ИтогоСуммаНДС = ИтогоСуммаНДС;
	ОбластьМакетаИтого.Параметры.ИтогоВсего    = ИтогоВСего;
	
	ПроставитьПрочеркиВПустыеПоля(ОбластьМакетаИтого);
	ТабДокумент.Вывести(ОбластьМакетаИтого);
    	
	ОбластьМакетаПодвал.Параметры.Заполнить(ДанныеДляПечати);
	                        
	Если ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НалоговыйАгент Тогда
		ОбластьМакетаПодвал.Параметры.Свидетельство = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбПокупателе, "Свидетельство,");
	Иначе
		ОбластьМакетаПодвал.Параметры.Свидетельство = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "Свидетельство,");
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьМакетаПодвал);
	
	Если ТипЗнч(СчетФактура.ДокументОснование) <> Тип("ДокументСсылка.ОказаниеУслуг") Тогда
		ТабДокумент.ВерхнийКолонтитул.Выводить          = Истина;
		ТабДокумент.ВерхнийКолонтитул.НачальнаяСтраница = 2;
		ТабДокумент.ВерхнийКолонтитул.ВертикальноеПоложение = ВертикальноеПоложение.Низ;
		ТабДокумент.ВерхнийКолонтитул.ТекстСлева   = ЗаголовокДляПечати;
		ТабДокумент.ВерхнийКолонтитул.ТекстСправа  = "Лист [&НомерСтраницы]";
	КонецЕсли;
	
	Возврат ТабДокумент;

КонецФункции // ПечатьСчетаФактуры()

Функция ПечатьСчетаФактуры1137(ДанныеДляПечати) Экспорт
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ПолеСверху = 13;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СчетФактураВыданный_СчетФактура1137";
    ТабДокумент.ЭкземпляровНаСтранице = 1;
	
	Макет = ПолучитьОбщийМакет("СчетФактура1137");
	
	ВывестиСчетФактуруВТабличныйДокумент(ТабДокумент, Макет, ДанныеДляПечати);
	
	Возврат ТабДокумент;

КонецФункции

Процедура ВывестиСчетФактуруВТабличныйДокумент(ТабДокумент, Макет, ДанныеДляПечати) Экспорт
	
	Дата 			= ДанныеДляПечати.ДатаСчетФактуры; 
	ЭтоПечатьУПД 	= ДанныеДляПечати.Свойство("СтатусУПД");
	
	БезПереходаПраваСобственности = Ложь;
	Если ЭтоПечатьУПД И (ДанныеДляПечати.СтатусУПД = 2) Тогда
		Если ДанныеДляПечати.Свойство("ПередачаНаРеализациюПоКомиссии") 
			И ДанныеДляПечати.ПередачаНаРеализациюПоКомиссии Тогда
			БезПереходаПраваСобственности = Истина;
		КонецЕсли;
		
		Если ДанныеДляПечати.Свойство("ДокументОснование") 
			И ТипЗнч(ДанныеДляПечати.ДокументОснование) = Тип("ДокументСсылка.ПередачаТоваров") Тогда
			БезПереходаПраваСобственности = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеДляПечати.Поставщик) = Тип("Массив") Тогда
		СведенияОПоставщике = Новый Массив;
		Для каждого Поставщик Из ДанныеДляПечати.Поставщик Цикл
			СведенияОПоставщике.Добавить(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Поставщик, Дата));
		КонецЦикла;
	Иначе
		СведенияОПоставщике  = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ДанныеДляПечати.Поставщик, Дата);
	КонецЕсли;
	
	НужныСведенияОПодразделенииПокупателя = ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаРеализацию
		ИЛИ ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАванс;
	
	Если ТипЗнч(ДанныеДляПечати.Покупатель) = Тип("Массив") Тогда
		СведенияОПокупателе = Новый Массив;
		СведенияОПодразделенииПокупателя = Новый Массив;
		Для каждого Покупатель Из ДанныеДляПечати.Покупатель Цикл
			Если НужныСведенияОПодразделенииПокупателя Тогда
				РеквизитыПокупателя = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Покупатель, "ГоловнойКонтрагент, ОбособленноеПодразделение");
				Если РеквизитыПокупателя.ОбособленноеПодразделение И ЗначениеЗаполнено(РеквизитыПокупателя.ГоловнойКонтрагент) Тогда
					СведенияОПокупателе.Добавить(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(РеквизитыПокупателя.ГоловнойКонтрагент, Дата));
					СведенияОПодразделенииПокупателя.Добавить(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ДанныеДляПечати.Покупатель, Дата));
				Иначе
					СведенияОПокупателе.Добавить(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Покупатель, Дата));
					СведенияОПодразделенииПокупателя.Добавить(Неопределено);
				КонецЕсли;
			Иначе
				СведенияОПокупателе.Добавить(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Покупатель, Дата));
				СведенияОПодразделенииПокупателя.Добавить(Неопределено);
			КонецЕсли;
		КонецЦикла;
	Иначе
		Если НужныСведенияОПодразделенииПокупателя
			И ТипЗнч(ДанныеДляПечати.Покупатель) = Тип("СправочникСсылка.Контрагенты") И ЗначениеЗаполнено(ДанныеДляПечати.Покупатель) Тогда
			РеквизитыПокупателя = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(ДанныеДляПечати.Покупатель, "ГоловнойКонтрагент, ОбособленноеПодразделение");
			Если РеквизитыПокупателя.ОбособленноеПодразделение И ЗначениеЗаполнено(РеквизитыПокупателя.ГоловнойКонтрагент) Тогда
				СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(РеквизитыПокупателя.ГоловнойКонтрагент, Дата);
				СведенияОПодразделенииПокупателя = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ДанныеДляПечати.Покупатель, Дата);
			Иначе
				СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ДанныеДляПечати.Покупатель, Дата);
				СведенияОПодразделенииПокупателя = Неопределено;
			КонецЕсли;
		Иначе
			СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ДанныеДляПечати.Покупатель, Дата);
			СведенияОПодразделенииПокупателя = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	// Выводим шапку
	ВедетсяУчетНДСПоФЗ56 = УчетНДС.ВедетсяУчетНДСПоФЗ56(ДанныеДляПечати.Дата);
	Если ВедетсяУчетНДСПоФЗ56 Тогда 
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаИнформация1137_625");
	Иначе
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаИнформация1137");
	КонецЕсли;
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	
	ОбластьМакета.Параметры.Заполнить(ДанныеДляПечати);
	
	Если ЭтоПечатьУПД Тогда
		Если ДанныеДляПечати.Исправление Тогда
			ОбластьМакета.Параметры.НомерИсправления = Строка(ДанныеДляПечати.НомерИсправления);
			ОбластьМакета.Параметры.ДатаИсправления  = Формат(Дата, "ДФ='дд ММММ гггг'") + " г.";
		Иначе
			ОбластьМакета.Параметры.НомерИсправления = "--";
			ОбластьМакета.Параметры.ДатаИсправления  = "--";
		КонецЕсли;
	Иначе
		Если ДанныеДляПечати.Исправление Тогда
			ОбластьМакета.Параметры.НомерИсправления = "Исправление № " + Строка(ДанныеДляПечати.НомерИсправления) + " от " + Формат(Дата, "ДФ='дд ММММ гггг'") + " г.";
		Иначе
			ОбластьМакета.Параметры.НомерИсправления = "Исправление № -- от --";
		КонецЕсли;
	КонецЕсли;
	
	Если БезПереходаПраваСобственности Тогда
		
		ОбластьМакета.Параметры.ПредставлениеПоставщика = "--";
		ОбластьМакета.Параметры.АдресПоставщика 		= "--";
		ОбластьМакета.Параметры.ИННпоставщика 			= "--";
		
	Иначе
		
		ЗаголовокПоставщика      = ?(ЭтоПечатьУПД, "", "Продавец: ");
		ЗаголовокАдресПоставщика = ?(ЭтоПечатьУПД, "", "Адрес: ");
		ЗаголовокИННпоставщика   = ?(ЭтоПечатьУПД, "", "ИНН/КПП продавца: ");
		
		КПППодразделения = "";
		
		Если ТипЗнч(СведенияОПоставщике) = Тип("Массив")  Тогда
			
			ТекстПоставщика      = "";
			ТекстАдресПоставщика = "";
			ТекстИННПоставщика   = "";
			СведенияОКПП = Неопределено;
			
			Для Индекс = 0 По СведенияОПоставщике.ВГраница() Цикл
				
				ДанныеПоставщика = СведенияОПоставщике[Индекс];
			
				ТекстПоставщика = ТекстПоставщика + ?(ПустаяСтрока(ТекстПоставщика), "", ";")
					+ ФормированиеПечатныхФорм.ОписаниеОрганизации(ДанныеПоставщика, "НаименованиеДляПечатныхФорм,");
				ТекстАдресПоставщика = ТекстАдресПоставщика + ?(ПустаяСтрока(ТекстАдресПоставщика), "", ";")
					+ ФормированиеПечатныхФорм.ОписаниеОрганизации(ДанныеПоставщика, "ЮридическийАдрес,");
				КПП = ?(СведенияОКПП <> Неопределено И СведенияОКПП[Индекс] <> Неопределено, 
					СведенияОКПП[Индекс],
					ФормированиеПечатныхФорм.ОписаниеОрганизации(ДанныеПоставщика, "КПП,", Ложь));
				ТекстИННПоставщика = ТекстИННПоставщика + ?(ПустаяСтрока(ТекстИННПоставщика), "", ";")
					+ ФормированиеПечатныхФорм.ОписаниеОрганизации(ДанныеПоставщика, "ИНН,", Ложь) 
					+ ?(ЗначениеЗаполнено(КПП), "/" + КПП, "");
			
			КонецЦикла;
			
		Иначе
			
			ТекстПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "НаименованиеДляПечатныхФорм,");
			ТекстАдресПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ЮридическийАдрес,");
			
			Если ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НалоговыйАгент
				И ДанныеДляПечати.ДоговорКонтрагента.ВидАгентскогоДоговора = Перечисления.ВидыАгентскихДоговоров.Нерезидент Тогда
				ТекстИННПоставщика = "--";
			Иначе
				Если ДанныеДляПечати.Свойство("КПП") Тогда
					КПП = ДанныеДляПечати.КПП; 
				ИначеЕсли ЗначениеЗаполнено(КПППодразделения) Тогда
					КПП = КПППодразделения;
				Иначе
					КПП = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "КПП,", Ложь);
				КонецЕсли;	
				ТекстИННПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ИНН,", Ложь) 
					+ ?(ЗначениеЗаполнено(КПП), "/" + КПП, "");
			КонецЕсли;
			
		КонецЕсли;
		
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ЗаголовокПоставщика + ТекстПоставщика;
		ОбластьМакета.Параметры.АдресПоставщика         = ЗаголовокАдресПоставщика + ТекстАдресПоставщика;
		ОбластьМакета.Параметры.ИННпоставщика           = ЗаголовокИННпоставщика + ТекстИННпоставщика;
			
	КонецЕсли;
		
	Если ЭтоПечатьУПД Тогда
		НомерНаПечатьСтрокой 	= ОбщегоНазначения.ПолучитьНомерНаПечать(ДанныеДляПечати);
		ДатаНаПечатьСтрокой 	= Формат(ДанныеДляПечати.Дата, "ДФ='дд ММММ гггг'") + " г.";
		ОбластьМакета.Параметры.Номер = НомерНаПечатьСтрокой;
		ОбластьМакета.Параметры.Дата  =	ДатаНаПечатьСтрокой;
		ЗаголовокДляПечати = "Универсальный передаточный документ № " + НомерНаПечатьСтрокой + " от " +  ДатаНаПечатьСтрокой;
	Иначе
		ЗаголовокДляПечати = ОбщегоНазначения.СформироватьЗаголовокДокумента(ДанныеДляПечати, "Счет-фактура");
		ОбластьМакета.Параметры.Номер = ЗаголовокДляПечати;
	КонецЕсли;
	
	Если ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАванс
		ИЛИ ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитента 
		ИЛИ ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитентаНаЗакупку Тогда
		
		ОбластьМакета.Параметры.ПредставлениеГрузоотправителя = ?(ЭтоПечатьУПД, "", "Грузоотправитель и его адрес: ") + "--";
		ОбластьМакета.Параметры.ПредставлениеГрузополучателя  = ?(ЭтоПечатьУПД, "", "Грузополучатель и его адрес: ") + "--";
		
	Иначе
		
		Если ТипЗнч(ДанныеДляПечати.Грузоотправитель) = Тип("Массив")  Тогда
			СведенияОГрузоотправителе = Новый Массив;
			Для каждого Грузоотправитель Из ДанныеДляПечати.Грузоотправитель Цикл
				СведенияОГрузоотправителе.Добавить(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Грузоотправитель, Дата));
			КонецЦикла;
		Иначе
			СведенияОГрузоотправителе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(
			    ?(БезПереходаПраваСобственности, ДанныеДляПечати.Поставщик, 
					?(ДанныеДляПечати.Грузоотправитель = "он же", Неопределено, ДанныеДляПечати.Грузоотправитель)), Дата);
		КонецЕсли;
		
		ЗаголовокГрузоотправителя = ?(ЭтоПечатьУПД, "", "Грузоотправитель и его адрес: ");
		Если ТипЗнч(СведенияОГрузоотправителе) = Тип("Массив") Тогда
			ТекстГрузоотправителя = "";
			Для каждого ДанныеГрузоотправителя Из СведенияОГрузоотправителе Цикл
				ТекстГрузоотправителя = ТекстГрузоотправителя + ?(ПустаяСтрока(ТекстГрузоотправителя), "", ";")
					+ ФормированиеПечатныхФорм.ОписаниеОрганизации(ДанныеГрузоотправителя, 
						"НаименованиеДляПечатныхФорм, ФактическийАдрес,");
			КонецЦикла;
		Иначе
			ТекстГрузоотправителя = ?(НЕ ЗначениеЗаполнено(ДанныеДляПечати.Грузоотправитель), 
				"--", 
				?(ДанныеДляПечати.Грузоотправитель = "он же", "он же", 
					ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузоотправителе,  
						"НаименованиеДляПечатныхФорм, ФактическийАдрес,")));
		КонецЕсли;
		ОбластьМакета.Параметры.ПредставлениеГрузоотправителя = ЗаголовокГрузоотправителя + ТекстГрузоотправителя;
		
		Если ТипЗнч(ДанныеДляПечати.Грузополучатель) = Тип("Массив")  Тогда
			СведенияОГрузополучателе = Новый Массив;
			Для каждого Грузополучатель Из ДанныеДляПечати.Грузополучатель Цикл
				СведенияОГрузополучателе.Добавить(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Грузополучатель, Дата));
			КонецЦикла;
		Иначе
			СведенияОГрузополучателе  = ?(БезПереходаПраваСобственности, СведенияОПокупателе, 
				УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ДанныеДляПечати.Грузополучатель, Дата));
		КонецЕсли;
		
		ЗаголовокГрузополучателя = ?(ЭтоПечатьУПД, "", "Грузополучатель и его адрес: ");
		Если ТипЗнч(СведенияОГрузополучателе) = Тип("Массив") Тогда
			ТекстГрузополучателя = "";
			Для каждого ДанныеГрузополучателя Из СведенияОГрузополучателе Цикл
				ТекстГрузополучателя = ТекстГрузополучателя + ?(ПустаяСтрока(ТекстГрузополучателя), "", ";")
					+ ФормированиеПечатныхФорм.ОписаниеОрганизации(ДанныеГрузополучателя, 
						"НаименованиеДляПечатныхФорм, ФактическийАдрес,");
			КонецЦикла;
		Иначе
			Если ДанныеДляПечати.Свойство("АдресДоставки") 
				И НЕ ПустаяСтрока(ДанныеДляПечати.АдресДоставки) Тогда
				ТекстГрузополучателя = ?(НЕ ЗначениеЗаполнено(ДанныеДляПечати.Грузополучатель), 
					ДанныеДляПечати.АдресДоставки,
					ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузополучателе, 
						"НаименованиеДляПечатныхФорм") + ", " + ДанныеДляПечати.АдресДоставки);
			Иначе
				ТекстГрузополучателя = ?(НЕ ЗначениеЗаполнено(ДанныеДляПечати.Грузополучатель), 
					"--",
					ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузополучателе, 
						"НаименованиеДляПечатныхФорм, ФактическийАдрес,"));
			КонецЕсли;
		КонецЕсли;
		ОбластьМакета.Параметры.ПредставлениеГрузополучателя = ЗаголовокГрузополучателя + ТекстГрузополучателя;
		
	КонецЕсли;
	
	СтрокаПоДокументу = "";
	Если ДанныеДляПечати.Свойство("ТаблицаДатОплат") Тогда
		Для каждого ПараметрыДокументаОплаты Из ДанныеДляПечати.ТаблицаДатОплат Цикл
			
			Если НЕ ЗначениеЗаполнено(ПараметрыДокументаОплаты.НомерПлатежноРасчетногоДокумента)
				И НЕ ЗначениеЗаполнено(ПараметрыДокументаОплаты.ДатаПлатежноРасчетногоДокумента) Тогда
				Продолжить;
			КонецЕсли;
			СтрокаПоДокументу = СтрокаПоДокументу
				+ ?(ПустаяСтрока(СтрокаПоДокументу), ?(ЭтоПечатьУПД, "", "К платежно-расчетному документу № "),", ")
				+ ПараметрыДокументаОплаты.НомерПлатежноРасчетногоДокумента 
				+ " от " + Формат(ПараметрыДокументаОплаты.ДатаПлатежноРасчетногоДокумента, "ДФ=dd.MM.yyyy") + " г.";
			
		КонецЦикла;
	Конецесли;
	
	Если ПустаяСтрока(СтрокаПоДокументу) Тогда
		Если ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАванс
			ИЛИ ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитента
			ИЛИ ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитентаНаЗакупку Тогда
			СтрокаПоДокументу = ?(ЭтоПечатьУПД, "", "К платежно-расчетному документу № ") + "-- от --";
		Иначе
			СтрокаПоДокументу = ?(ЭтоПечатьУПД, "", "К платежно-расчетному документу № ") + "   от";
		КонецЕсли; 
	КонецЕсли; 
	
	Если ЭтоПечатьУПД И ДанныеДляПечати.СтатусУПД = 2 Тогда
		
		// В УПД в статусе 2 ставятся прочерки показатели, установленные в качестве обязательных исключительно для счета-фактуры: 
		// - «К платежно-расчетному документу» (строка 7); 
		СтрокаПоДокументу = "--";
	КонецЕсли;
	
	ОбластьМакета.Параметры.ПоДокументу = СтрокаПоДокументу;
	
	Если БезПереходаПраваСобственности Тогда
		
		ОбластьМакета.Параметры.ПредставлениеПокупателя = "--";
		ОбластьМакета.Параметры.АдресПокупателя 		= "--";
		ОбластьМакета.Параметры.ИННПокупателя 			= "--";
		
	Иначе
		
		ЗаголовокПокупателя      = ?(ЭтоПечатьУПД, "", "Покупатель: ");
		ЗаголовокАдресПокупателя = ?(ЭтоПечатьУПД, "", "Адрес: ");
		ЗаголовокИННПокупателя   = ?(ЭтоПечатьУПД, "", "ИНН/КПП покупателя: ");
		
		Если ТипЗнч(СведенияОПокупателе) = Тип("Массив") Тогда
			
			ТекстПокупателя      = "";
			ТекстАдресПокупателя = "";
			ТекстИННПокупателя   = "";
			
			Для Индекс = 0 По СведенияОПокупателе.ВГраница() Цикл
				
				ДанныеОПокупателе = СведенияОПокупателе[Индекс];
				ДанныеОПодразделенииПокупателя = СведенияОПодразделенииПокупателя[Индекс];
			
				ТекстПокупателя = ТекстПокупателя + ?(ПустаяСтрока(ТекстПокупателя), "", ";")
					+ ФормированиеПечатныхФорм.ОписаниеОрганизации(ДанныеОПокупателе, "НаименованиеДляПечатныхФорм,");
				ТекстАдресПокупателя = ТекстАдресПокупателя + ?(ПустаяСтрока(ТекстАдресПокупателя), "", ";")
					+ ФормированиеПечатныхФорм.ОписаниеОрганизации(ДанныеОПокупателе, "ЮридическийАдрес,");
				Если ДанныеОПодразделенииПокупателя <> Неопределено Тогда
					КПП = ФормированиеПечатныхФорм.ОписаниеОрганизации(ДанныеОПодразделенииПокупателя, "КПП,", Ложь);
				Иначе
					КПП = ФормированиеПечатныхФорм.ОписаниеОрганизации(ДанныеОПокупателе, "КПП,", Ложь);
				КонецЕсли;
				ТекстИННПокупателя = ТекстИННПокупателя + ?(ПустаяСтрока(ТекстИННПокупателя), "", ";")
					+ ФормированиеПечатныхФорм.ОписаниеОрганизации(ДанныеОПокупателе, "ИНН,", Ложь) 
					+ ?(ЗначениеЗаполнено(КПП), "/" + КПП, "");
				
			КонецЦикла;
		
		Иначе
		
			ТекстПокупателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "НаименованиеДляПечатныхФорм,");
			ТекстАдресПокупателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ЮридическийАдрес,");
				
			Если ДанныеДляПечати.Свойство("КППКонтрагента") И ЗначениеЗаполнено(ДанныеДляПечати.КППКонтрагента) Тогда
				КПП = ДанныеДляПечати.КППКонтрагента;
			ИначеЕсли СведенияОПодразделенииПокупателя <> Неопределено Тогда
				КПП = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПодразделенииПокупателя, "КПП,", Ложь);
			Иначе
				КПП = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "КПП,", Ложь);
			КонецЕсли;
			ТекстИННПокупателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ИНН,", Ложь)
				+ ?(ЗначениеЗаполнено(КПП), "/" + КПП, "");
		
		КонецЕсли;
			
		ОбластьМакета.Параметры.ПредставлениеПокупателя = ЗаголовокПокупателя + ТекстПокупателя;
		ОбластьМакета.Параметры.АдресПокупателя         = ЗаголовокАдресПокупателя + ТекстАдресПокупателя;
		ОбластьМакета.Параметры.ИННПокупателя           = ЗаголовокИННПокупателя + ТекстИННПокупателя;
			
	КонецЕсли;
	
	ОбластьМакета.Параметры.Валюта = ?(ЭтоПечатьУПД, "", "Валюта: наименование, код ")
		+ ?(ЗначениеЗаполнено(ДанныеДляПечати.Валюта), 
		ДанныеДляПечати.Валюта.НаименованиеПолное + ", " + ДанныеДляПечати.Валюта.Код, 
		"");		
			
	ТабДокумент.Вывести(ОбластьМакета);
	
	Если ВедетсяУчетНДСПоФЗ56 Тогда 
		ОбластьМакета = Макет.ПолучитьОбласть("ИдентификаторГосКонтракта");
		Если ЭтоПечатьУПД Тогда 
			ОбластьМакета.Параметры.ИдентификаторГосКонтракта = ДанныеДляПечати.ИдентификаторГосКонтракта;
		Иначе
			ШаблонЗаголовкаГосконтракт = НСтр("ru = 'Идентификатор государственного контракта, договора (соглашения): %1'");
			ОбластьМакета.Параметры.ИдентификаторГосКонтракта = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонЗаголовкаГосконтракт, ДанныеДляПечати.ИдентификаторГосКонтракта);
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЕсли;
	
	ЭтоСчетФактураОтИмениПродавца = Ложь;
	
	Если ТипЗнч(ДанныеДляПечати.Ссылка) = Тип("ДокументСсылка.СчетФактураВыданный")
		И ТипЗнч(ДанныеДляПечати.Покупатель) = Тип("СправочникСсылка.Контрагенты") 
		И (ТипЗнч(ДанныеДляПечати.Поставщик) = Тип("СправочникСсылка.Контрагенты")
		ИЛИ ТипЗнч(ДанныеДляПечати.Поставщик) = Тип("Массив")) Тогда
			
		ЭтоСчетФактураОтИмениПродавца = Истина;
			
	КонецЕсли;
	
	// Выводим заголовок таблицы
	
	ОбластьМакетаЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ОбластьМакетаЗаголовокТаблицы.Параметры.Заполнить(ДанныеДляПечати);
	ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
	
	// Дополнительная подготовка данных для вывода в табличную часть
	
	ТаблицаСтрокТовары = ДанныеДляПечати.ТабличнаяЧасть;
 	ТаблицаСтрокТовары.Колонки.Добавить("СуммаБезНДС");
	ТаблицаСтрокТовары.Колонки.Добавить("СуммаСНДС");

	Для Каждого Строчка Из ТаблицаСтрокТовары Цикл
		
		Строчка.СуммаСНДС = Строчка.Сумма + ?(Строчка.СуммаВключаетНДС, 0, Строчка.СуммаНДС);
		Строчка.СуммаБезНДС = Строчка.СуммаСНДС - Строчка.СуммаНДС;
		
		Если Строчка.СуммаВключаетНДС Тогда
			Строчка.Цена = 0;
		КонецЕсли;
		
		Если ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаРеализацию 
			И Строчка.Количество <> 0
			И (Строчка.СтавкаНДС = Перечисления.СтавкиНДС.НДС20_120
			ИЛИ Строчка.СтавкаНДС = Перечисления.СтавкиНДС.НДС18_118
			ИЛИ Строчка.СтавкаНДС = Перечисления.СтавкиНДС.НДС10_110) Тогда
			
			Строчка.Цена = Окр(Строчка.СуммаСНДС / Строчка.Количество, 2);
			
		КонецЕсли;	
					
		Если НЕ ЗначениеЗаполнено(Строчка.ЕдиницаИзмерения) Тогда
			Строчка.Количество = 0;
			Строчка.Цена = 0;
		ИначеЕсли Строчка.Количество = 0 Тогда
			Строчка.ЕдиницаИзмерения = "";
			Строчка.Цена = 0;
		ИначеЕсли Строчка.Цена = 0 Тогда
			Строчка.Цена = Окр(Строчка.СуммаБезНДС / Строчка.Количество, 2);
		КонецЕсли;
		
		Если ДанныеДляПечати.Дата >= '20160701'
		   И Строчка.СтавкаНДС = Перечисления.СтавкиНДС.НДС0
		   И ЗначениеЗаполнено(Строчка.ТоварКодТНВЭД) Тогда
			// Дополняем наименование товара информацией о коде ТН ВЭД
			Строчка.ТоварНаименование = Строчка.ТоварНаименование + ", код ТН ВЭД " + СокрЛП(Строчка.ТоварКодТНВЭД);
		КонецЕсли;
		
	КонецЦикла;
	
	//&_Галимов_Закомментировано 17.03.2017 10:53:55 
	//КолонкиДляСвертки = ?(ТаблицаСтрокТовары.Колонки.Найти("Контрагент") <> Неопределено, "Контрагент,", "")
	//	+ "Товар,ТоварНаименование,ТоварКод,СтранаПроисхождения,СтранаПроисхожденияКод,ПредставлениеСтраны,"
	//	+ "НомерГТД,ПредставлениеГТД,ЕдиницаИзмерения,ЕдиницаИзмеренияКод,Цена,СтавкаНДС";
	//ТаблицаСтрокТовары.Свернуть(КолонкиДляСвертки, "Количество,Сумма,СуммаНДС,СуммаСНДС,СуммаБезНДС");
	//&_Галимов_Закомментировано 17.03.2017 10:53:57 
	
	ТаблицаСтрокТовары.Колонки.Добавить("НомерСтроки", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(10, 0));
	НомерСтроки = 0;
	Для Каждого Строчка Из ТаблицаСтрокТовары Цикл
		НомерСтроки = НомерСтроки + 1;
		Строчка.НомерСтроки = НомерСтроки;
	КонецЦикла;
	
	// Выводим строки таблицы
	
	ОбластьМакета       = Макет.ПолучитьОбласть("Строка");
	ОбластьМакетаИтого  = Макет.ПолучитьОбласть("Итого");
	ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал");
	Если ЭтоПечатьУПД Тогда
		ОбластьМакетаПодвалНакладной = Макет.ПолучитьОбласть("ПодвалНакладной");
	Иначе
		ОбластьМакетаПодвалНакладной = Новый ТабличныйДокумент;
	КонецЕсли;
	КоличествоСтраниц = 1;
	
	КоличествоСтрок = ТаблицаСтрокТовары.Количество();
	
	ИтогоСтоимость = 0;
	ИтогоСуммаНДС  = 0;
	ИтогоВсего     = 0;
	
	Для Каждого Строчка Из ТаблицаСтрокТовары Цикл
		
		ОбластьМакета.Параметры.Заполнить(Строчка);
		
		Если НЕ ЗначениеЗаполнено(Строчка.ТоварНаименование) Тогда
			ОбластьМакета.Параметры.ТоварНаименование = Строчка.Товар;
		КонецЕсли;
		ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(ОбластьМакета.Параметры.ТоварНаименование);
		
		Если ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаРеализацию Тогда
			ОбластьМакета.Параметры.Стоимость = Строчка.СуммаБезНДС;
			ОбластьМакета.Параметры.Цена      = Строчка.Цена;
		Иначе
			Если ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НалоговыйАгент
				ИЛИ ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаСуммовуюРазницу Тогда
				ОбластьМакета.Параметры.Стоимость = Строчка.СуммаБезНДС;
			Иначе
				ОбластьМакета.Параметры.Стоимость = 0;
			КонецЕсли;
			ОбластьМакета.Параметры.Количество = 0;
			ОбластьМакета.Параметры.Цена       = 0;
		КонецЕсли;
		
		ОбластьМакета.Параметры.Всего     = Строчка.СуммаСНДС;
		ОбластьМакета.Параметры.СтавкаНДС = Строчка.СтавкаНДС;
		
		Если Строчка.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
			ОбластьМакета.Параметры.СтавкаНДС = "без НДС";
			ОбластьМакета.Параметры.СуммаНДС  = "без НДС";
		КонецЕсли;
		
		Если ДанныеДляПечати.ВидСчетаФактуры <> Перечисления.ВидСчетаФактурыВыставленного.НаАванс
			И ДанныеДляПечати.ВидСчетаФактуры <> Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитента 
			И ДанныеДляПечати.ВидСчетаФактуры <> Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитентаНаЗакупку Тогда
			ОбластьМакета.Параметры.Акциз = "без акциза";
		КонецЕсли;
		
		Если Строка(Строчка.ПредставлениеСтраны) = "Россия" 
			ИЛИ Строка(Строчка.ПредставлениеСтраны) = "Российская Федерация"
			ИЛИ Строчка.СтранаПроисхождения = Справочники.КлассификаторСтранМира.РОССИЯ Тогда
			ОбластьМакета.Параметры.ПредставлениеСтраны    = "--";
			ОбластьМакета.Параметры.СтранаПроисхожденияКод = "--";
			ОбластьМакета.Параметры.ПредставлениеГТД       = "--";
		Иначе
			Если ЗначениеЗаполнено(Строчка.СтранаПроисхождения) Тогда
				ОбластьМакета.Параметры.ПредставлениеСтраны  = СокрЛП(Строчка.СтранаПроисхождения.Наименование);
			Иначе
				ОбластьМакета.Параметры.СтранаПроисхожденияКод = "--";
				ОбластьМакета.Параметры.ПредставлениеСтраны    = "--";
				ОбластьМакета.Параметры.ПредставлениеГТД       = "--";
			КонецЕсли;
		КонецЕсли; 
		
		// Проставляем прочерки в незаполненные графы в соответствии с Постановлением
		Если ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАванс
			ИЛИ ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитента 
			ИЛИ ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитентаНаЗакупку Тогда
			
			ОбластьМакета.Параметры.ЕдиницаИзмерения    = "--";
			ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "--";
			
			ОбластьМакета.Параметры.Количество = "--";
			ОбластьМакета.Параметры.Цена       = "--";
			ОбластьМакета.Параметры.Стоимость  = "--";
			ОбластьМакета.Параметры.Акциз      = "--";
			
			ОбластьМакета.Параметры.СтранаПроисхожденияКод = "--";
			ОбластьМакета.Параметры.ПредставлениеСтраны    = "--";
			ОбластьМакета.Параметры.ПредставлениеГТД       = "--";
			
		Иначе
			
			Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.ЕдиницаИзмерения) Тогда
				ОбластьМакета.Параметры.ЕдиницаИзмерения    = "--";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "--";
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.ЕдиницаИзмеренияКод) Тогда
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "--";
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.Количество) Тогда
				ОбластьМакета.Параметры.Количество = "--";
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.Цена) Тогда
				ОбластьМакета.Параметры.Цена = "--";
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЭтоПечатьУПД 
			И ДанныеДляПечати.СтатусУПД = 2 Тогда
			
			// Ставим прочерки в графах, которые установленные в качестве обязательных исключительно для счета-фактуры
			//- «В том числе сумма акциза» (графа 6); 
			//- «Налоговая ставка» (графа 7);
			//- «Цифровой код страны происхождения товара» (графа 10);
			//- «Краткое наименование страны происхождения товара» (графа 10а);
			//- «Номер таможенной декларации» (графа 11). 
			
			ОбластьМакета.Параметры.Акциз 		= "--";
			ОбластьМакета.Параметры.СтавкаНДС 	= "--";
			ОбластьМакета.Параметры.СуммаНДС 	= ?(Строчка.СуммаНДС <> 0 , Строчка.СуммаНДС, "--");
			ОбластьМакета.Параметры.СтранаПроисхожденияКод 	= "--";
			ОбластьМакета.Параметры.ПредставлениеСтраны 	= "--";
			ОбластьМакета.Параметры.ПредставлениеГТД 		= "--";
			
		КонецЕсли;
		
		// Проверим возможность вывода табличного документа
		СтрокаСПодвалом = Новый Массив;
		СтрокаСПодвалом.Добавить(ОбластьМакета);
		Если Строчка.НомерСтроки = КоличествоСтрок Тогда
			// Если последняя строка, то должен поместится итог и подвал
			СтрокаСПодвалом.Добавить(ОбластьМакетаИтого);
			СтрокаСПодвалом.Добавить(ОбластьМакетаПодвал);
			Если ЭтоПечатьУПД Тогда
				СтрокаСПодвалом.Добавить(ОбластьМакетаПодвалНакладной);
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом) Тогда
			
			Если КоличествоСтрок > 0 Тогда
				// Вывод разделителя и заголовка таблицы на новой странице
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
				КоличествоСтраниц = КоличествоСтраниц + 1;
			КонецЕсли;
			
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);

		ИтогоСтоимость = ИтогоСтоимость + Строчка.СуммаБезНДС;
		ИтогоСуммаНДС  = ИтогоСуммаНДС + Строчка.СуммаНДС;
		ИтогоВсего     = ИтогоВсего    + Строчка.СуммаСНДС;
		
	КонецЦикла;
	
	КоличествоЛистов = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Документ составлен на%1%2 %3'"), Символы.ПС, КоличествоСтраниц,
		ОбщегоНазначения.ФормаМножественногоЧисла(
			НСтр("ru = 'листе'"), НСтр("ru = 'листах'"), НСтр("ru = 'листах'"), КоличествоСтраниц));
	ДанныеДляПечати.Вставить("КоличествоЛистов", КоличествоЛистов);
	
	Если ТаблицаСтрокТовары.Количество() > 0 Тогда
		ТабДокумент.Область(ТабДокумент.ВысотаТаблицы,,ТабДокумент.ВысотаТаблицы,).ВместеСоСледующим = Истина;
	КонецЕсли; 
	
	// Выводим строку "Всего к оплате"
	
	Если ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАванс
		ИЛИ ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитента 
		ИЛИ ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитентаНаЗакупку Тогда
		ОбластьМакетаИтого.Параметры.ИтогоСтоимость = "--";
	Иначе
		ОбластьМакетаИтого.Параметры.ИтогоСтоимость = ИтогоСтоимость;
	КонецЕсли;
	
	Если ЭтоПечатьУПД И ДанныеДляПечати.СтатусУПД = 2 Тогда
	    ОбластьМакетаИтого.Параметры.ИтогоСуммаНДС = ?(ИтогоСуммаНДС <> 0, ИтогоСуммаНДС, "--");
	ИначеЕсли ДанныеДляПечати.СчетФактураБезНДС Тогда
		ОбластьМакетаИтого.Параметры.ИтогоСуммаНДС = "без НДС";
	Иначе
		ОбластьМакетаИтого.Параметры.ИтогоСуммаНДС = ИтогоСуммаНДС;
	КонецЕсли;
	ОбластьМакетаИтого.Параметры.ИтогоВсего = ИтогоВСего;
	
	ТабДокумент.Вывести(ОбластьМакетаИтого);
		
	// Выводим подвал
	
	ОбластьМакетаПодвал.Параметры.Заполнить(ДанныеДляПечати);
	
	Если ЭтоСчетФактураОтИмениПродавца Тогда
		СведенияОКомиссионере = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ДанныеДляПечати.Организация, Дата);
		ОбластьМакетаПодвал.Параметры.Свидетельство = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОКомиссионере, "Свидетельство,");
	ИначеЕсли ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НалоговыйАгент Тогда
		ОбластьМакетаПодвал.Параметры.Свидетельство = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "Свидетельство,");
	ИначеЕсли ТипЗнч(СведенияОПоставщике) <> Тип("Массив") Тогда
		ОбластьМакетаПодвал.Параметры.Свидетельство = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "Свидетельство,");
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьМакетаПодвал);
	
		
	Если ЭтоСчетФактураОтИмениПродавца И НЕ ЭтоПечатьУПД Тогда
		ВывестиРеквизитыКомиссионера(ДанныеДляПечати.Организация, ДанныеДляПечати.Поставщик, ДанныеДляПечати.Покупатель, Дата, Макет, ТабДокумент);
	КонецЕсли;
	
	// Устанавливаем параметры печати и колонтитулы
	
	Если ТипЗнч(ДанныеДляПечати.ДокументОснование) <> Тип("ДокументСсылка.ОказаниеУслуг") Тогда
		ТабДокумент.ВерхнийКолонтитул.Выводить          = Истина;
		ТабДокумент.ВерхнийКолонтитул.НачальнаяСтраница = 2;
		ТабДокумент.ВерхнийКолонтитул.ВертикальноеПоложение = ВертикальноеПоложение.Низ;
		ТабДокумент.ВерхнийКолонтитул.ТекстСлева   = ЗаголовокДляПечати;
		ТабДокумент.ВерхнийКолонтитул.ТекстСправа  = "Лист [&НомерСтраницы]";
	КонецЕсли;
	
КонецПроцедуры

// Процедура возвращает общие данные для печати счета фактуры
// по всем документам-основаниям
// 
Функция ПодготовитьОбщиеДанныеДляПечатиКорректировочногоСчетаФактуры(СчетФактура, ЭтоПечатьУКД = Ложь) Экспорт
	
	Руководитель = СчетФактура.Руководитель;
	ДокументыОснования = СчетФактура.ДокументыОснования;
	ГлавныйБухгалтер = СчетФактура.ГлавныйБухгалтер;
	
	СписокОснований = ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ДокументыОснования.ВыгрузитьКолонку("ДокументОснование"),Истина);
	
	ОбщиеДанныеДляПечати = Неопределено;
	
	ДанныеСчетаФактуры = Новый Структура();
	ДанныеСчетаФактуры.Вставить("Ссылка", 							СчетФактура);
	ДанныеСчетаФактуры.Вставить("Номер",  							ОбщегоНазначения.ПолучитьНомерНаПечать(СчетФактура));
	ДанныеСчетаФактуры.Вставить("Дата",   							СчетФактура.Дата);
	ДанныеСчетаФактуры.Вставить("Организация",   					СчетФактура.Организация);
	ДанныеСчетаФактуры.Вставить("Контрагент",   					СчетФактура.Контрагент);
	ДанныеСчетаФактуры.Вставить("ДоговорКонтрагента",               СчетФактура.ДоговорКонтрагента);
	ДанныеСчетаФактуры.Вставить("ВидСчетаФактуры",                  СчетФактура.ВидСчетаФактуры);
	ДанныеСчетаФактуры.Вставить("Исправление",                      СчетФактура.Исправление);
	ДанныеСчетаФактуры.Вставить("НомерИсправления",                 СчетФактура.НомерИсправления);
	ДанныеСчетаФактуры.Вставить("НомерИсправляемогоКорректировочногоДокумента", СчетФактура.НомерИсправляемогоКорректировочногоДокумента);
	ДанныеСчетаФактуры.Вставить("ДатаИсправляемогоКорректировочногоДокумента",  СчетФактура.ДатаИсправляемогоКорректировочногоДокумента);
	ДанныеСчетаФактуры.Вставить("Продавец",                         СчетФактура.Продавец);
	ДанныеСчетаФактуры.Вставить("КППКонтрагента",                   СчетФактура.КППКонтрагента);
	ДанныеСчетаФактуры.Вставить("СчетФактураБезНДС",                СчетФактура.СчетФактураБезНДС);
	ДанныеСчетаФактуры.Вставить("ИдентификаторГосКонтракта",        СчетФактура.ИдентификаторГосКонтракта);
	
	Для каждого ТекущееОснование из СписокОснований Цикл
		Если Не ЗначениеЗаполнено(ТекущееОснование) Тогда
			//Предупреждение("Не выбран документ-основание для данного счета-фактуры!");
			Продолжить;
		КонецЕсли; 
		
		ТипОснования = ТипЗнч(ТекущееОснование);
		ДанныеДляПечати = Неопределено;
		
		Если ТипОснования = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
			ДанныеДляПечати = УчетНДС.СобратьДанныеДляПечатиКорректировочногоСчетаФактуры(ТекущееОснование, ДанныеСчетаФактуры);
		КонецЕсли;
		
		Если ДанныеДляПечати = Неопределено или ТипЗнч(ДанныеДляПечати) = Тип("Соответствие") Тогда
			Продолжить;
		КонецЕсли;
		
		Если ОбщиеДанныеДляПечати = Неопределено Тогда
			ОбщиеДанныеДляПечати = ДанныеДляПечати;
		Иначе
			Для Каждого СтрДанных Из ДанныеДляПечати Цикл
				
				Если СтрДанных.Ключ = "ТабличнаяЧасть" Тогда
					ОбщаяТабЧасть = ОбщиеДанныеДляПечати.ТабличнаяЧасть;
					ТекущаяТабЧасть = СтрДанных.Значение;
					
					Для Каждого СтрокаТекущейТабЧасть Из ТекущаяТабЧасть Цикл
						СтрокаТабЧасти = ОбщаяТабЧасть.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаТабЧасти, СтрокаТекущейТабЧасть);
					КонецЦикла;
				Иначе
					Если Не ОбщиеДанныеДляПечати.Свойство(СтрДанных.Ключ) Тогда
						// Если данный параметр для печати шапки документа еще не  определен - то определяем его
						ОбщиеДанныеДляПечати.Вставить(СтрДанных.Ключ, СтрДанных.Значение);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
	КонецЦикла;
	
	Если ОбщиеДанныеДляПечати <> Неопределено Тогда
		
		КорректируемыеСчетаФактуры = Новый ТаблицаЗначений;
		КорректируемыеСчетаФактуры.Колонки.Добавить("НомерСчетаФактуры");
		КорректируемыеСчетаФактуры.Колонки.Добавить("ДатаСчетаФактуры");
		КорректируемыеСчетаФактуры.Колонки.Добавить("УчитыватьИсправлениеИсходногоДокумента");
		КорректируемыеСчетаФактуры.Колонки.Добавить("НомерИсправления");
		КорректируемыеСчетаФактуры.Колонки.Добавить("ДатаИсправления");
		
		РеквизитыПередаточныхДокументов = ""; 
		
		Для Каждого ТекущееОснование ИЗ ДокументыОснования Цикл
			РеквизитыСчетаФактуры = КорректируемыеСчетаФактуры.Добавить();
			РеквизитыСчетаФактуры.НомерСчетаФактуры = ТекущееОснование.НомерИсходногоДокумента;
			РеквизитыСчетаФактуры.ДатаСчетаФактуры  = ТекущееОснование.ДатаИсходногоДокумента;
			РеквизитыСчетаФактуры.УчитыватьИсправлениеИсходногоДокумента = ТекущееОснование.УчитыватьИсправлениеИсходногоДокумента;
			РеквизитыСчетаФактуры.НомерИсправления  = ?(ТекущееОснование.НомерИсправленияИсходногоДокумента = 0 ИЛИ НЕ ТекущееОснование.УчитыватьИсправлениеИсходногоДокумента,
														"--", ТекущееОснование.НомерИсправленияИсходногоДокумента);
			РеквизитыСчетаФактуры.ДатаИсправления   = ?(Не ЗначениеЗаполнено(ТекущееОснование.ДатаИсправленияИсходногоДокумента) ИЛИ НЕ ТекущееОснование.УчитыватьИсправлениеИсходногоДокумента,
														'00010101', ТекущееОснование.ДатаИсправленияИсходногоДокумента);
			ИсправляемыйДокументРеализации = УчетНДС.ПолучитьИсправляемыйДокументРеализации(ТекущееОснование.ДокументОснование, Истина);
			РеквизитыПередаточныхДокументов = РеквизитыПередаточныхДокументов + ?(РеквизитыПередаточныхДокументов = "", "", ", ")
				+ ?(ЭтоПечатьУКД,"Универсальный передаточный документ " + НалоговыйУчетУСН.РеквизитыПервичногоДокумента(ИсправляемыйДокументРеализации),
							НалоговыйУчетУСН.РеквизитыПервичногоДокумента(ИсправляемыйДокументРеализации,,,Истина));
		КонецЦикла;
		
		ДанныеДляПечати.Вставить("РеквизитыПередаточныхДокументов", РеквизитыПередаточныхДокументов);
		
		КорректируемыеСчетаФактуры.Свернуть("НомерСчетаФактуры, ДатаСчетаФактуры, УчитыватьИсправлениеИсходногоДокумента, НомерИсправления, ДатаИсправления");
		
		
		Если КорректируемыеСчетаФактуры.Количество() <> 0 Тогда
			
			КорректируемыеСчетаФактуры.Сортировать("ДатаСчетаФактуры Возр", Новый СравнениеЗначений);
			Если КорректируемыеСчетаФактуры[0].ДатаСчетаФактуры >= '20160701' Тогда
				
				Для Каждого СтрокаТабЧасти Из ОбщиеДанныеДляПечати.ТабличнаяЧасть Цикл
					
					Если СтрокаТабЧасти.СтавкаНДС = Перечисления.СтавкиНДС.НДС0
					   И ЗначениеЗаполнено(СтрокаТабЧасти.ТоварКодТНВЭД) Тогда
						// Дополняем наименование товара информацией о коде ТН ВЭД
						СтрокаТабЧасти.НаименованиеТовара = СтрокаТабЧасти.НаименованиеТовара
							+ ", код ТН ВЭД " + СокрЛП(СтрокаТабЧасти.ТоварКодТНВЭД);
					КонецЕсли;
					
				КонецЦикла; 
				
			КонецЕсли;
			
		КонецЕсли; 
		
		ОбщиеДанныеДляПечати.Вставить("КорректируемыеСчетаФактуры", КорректируемыеСчетаФактуры);
		
		Если ЗначениеЗаполнено(Руководитель) Тогда
			Если ОбщиеДанныеДляПечати.Свойство("ФИОРуководителя") Тогда 
				ОбщиеДанныеДляПечати.ФИОРуководителя = ОбщегоНазначения.ФамилияИнициалыФизЛица(Руководитель);
			ИначеЕсли ОбщиеДанныеДляПечати.Свойство("ФИОПБОЮЛ") Тогда
				ОбщиеДанныеДляПечати.ФИОПБОЮЛ = ОбщегоНазначения.ФамилияИнициалыФизЛица(Руководитель);
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ГлавныйБухгалтер) И ОбщиеДанныеДляПечати.Свойство("ФИОГлавногоБухгалтера") Тогда
			ОбщиеДанныеДляПечати.ФИОГлавногоБухгалтера = ОбщегоНазначения.ФамилияИнициалыФизЛица(ГлавныйБухгалтер);
		КонецЕсли;
		
		ОбщиеДанныеДляПечати.Вставить("КППКонтрагента",  	СчетФактура.КППКонтрагента);
		
		//&_Галимов_Закомментировано 17.03.2017 10:57:53 
		//КолонкиГруппировок = ""
		//+"Номенклатура,"
		//+"ТоварКод,"
		//+"ТоварАртикул,"
		//+"НаименованиеТовара,"
		//+"НаименованиеЕдиницыИзмерения,"
		//+"ЕдиницаИзмеренияКод,"
		//+"ЦенаДоИзменения,"	
		//+"ЦенаПослеИзменения,"
		//+"СтавкаНДС,"
		//+"СуммаВключаетНДС";
		//
		//КолонкиСуммирования = ""
		//+"СуммаНДСДоИзменения,"
		//+"СуммаНДСПослеИзменения,"
		//+"СтоимостьСНДСДоИзменения,"
		//+"СтоимостьСНДСПослеИзменения,"
		//+"РазницаБезНДСУвеличение,"
		//+"РазницаБезНДСУменьшение,"
		//+"РазницаНДСУвеличение,"
		//+"РазницаНДСУменьшение,"
		//+"РазницаСНДСУвеличение,"
		//+"РазницаСНДСУменьшение,"
		//+"СтоимостьБезНДСДоИзменения,"
		//+"СтоимостьБезНДСПослеИзменения,"
		//+"КоличествоДоИзменения,"
		//+"КоличествоПослеИзменения";
		//
		//ОбщиеДанныеДляПечати.ТабличнаяЧасть.Свернуть(КолонкиГруппировок, КолонкиСуммирования);
		//&_Галимов_Закомментировано 17.03.2017 10:57:58 
		
		ОбщиеДанныеДляПечати.ТабличнаяЧасть.Колонки.Добавить("НомерСтроки", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(10, 0));
		НомерСтроки = 0;
		Для Каждого Строчка Из ОбщиеДанныеДляПечати.ТабличнаяЧасть Цикл
			НомерСтроки = НомерСтроки + 1;
			Строчка.НомерСтроки = НомерСтроки;
		КонецЦикла;
		
		// заполнение колонок код и артикул
		ДополнительнаяКолонкаПечатныхФормДокументов = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
		Если ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить Тогда
			ОбщиеДанныеДляПечати.ТабличнаяЧасть.ЗаполнитьЗначения("", "ТоварКод");
			ОбщиеДанныеДляПечати.ТабличнаяЧасть.Колонки.Удалить("ТоварАртикул");
		ИначеЕсли ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
			ОбщиеДанныеДляПечати.ТабличнаяЧасть.Колонки.Удалить("ТоварКод");
			ОбщиеДанныеДляПечати.ТабличнаяЧасть.Колонки.ТоварАртикул.Имя = "ТоварКод";
		Иначе
			ОбщиеДанныеДляПечати.ТабличнаяЧасть.Колонки.Удалить("ТоварАртикул");
		КонецЕсли;
		
		ОбщиеДанныеДляПечати.Вставить("ДокументыОснования", СписокОснований);
		
	КонецЕсли;
	
	Возврат ОбщиеДанныеДляПечати;

КонецФункции

// Проверяет правильность заполнения шапки документа.
// проставляет прочерки в незаполненных полях печатной формы счета-фактуры
//
Процедура ПроставитьПрочеркиВПустыеПоля(ОбластьМакета)

	Для т = 0 По ОбластьМакета.Параметры.Количество() - 1 Цикл
		
		ТекПараметр = ОбластьМакета.Параметры.Получить(т);
		
		Если (Найти(ТекПараметр, "Продавец:") <> 0)
		   и (СокрЛП(ТекПараметр) = "Продавец:") Тогда
			ОбластьМакета.Параметры.Установить(т, "Продавец: ----");
			
		ИначеЕсли (Найти(ТекПараметр, "Адрес:") <> 0)
			    и (СокрЛП(ТекПараметр) = "Адрес:") Тогда
			ОбластьМакета.Параметры.Установить(т, "Адрес: ----");
			
		ИначеЕсли (Найти(ТекПараметр, "Идентификационный номер продавца (ИНН):") <> 0)
			    и (СокрЛП(ТекПараметр) = "Идентификационный номер продавца (ИНН):") Тогда
			ОбластьМакета.Параметры.Установить(т, "Идентификационный номер продавца (ИНН): ----");
			
		ИначеЕсли (Найти(ТекПараметр, "ИНН/КПП продавца:") <> 0)
			    и (СокрЛП(ТекПараметр) = "ИНН/КПП продавца:") Тогда
			ОбластьМакета.Параметры.Установить(т, "ИНН/КПП продавца: ----");
			
		ИначеЕсли (Найти(ТекПараметр, "Грузоотправитель и его адрес:") <> 0)
			    и (СокрЛП(ТекПараметр) = "Грузоотправитель и его адрес:") Тогда
			ОбластьМакета.Параметры.Установить(т, "Грузоотправитель и его адрес: ----");
			
		ИначеЕсли (Найти(ТекПараметр, "Грузополучатель и его адрес:") <> 0)
		   		и (СокрЛП(ТекПараметр) = "Грузополучатель и его адрес:") Тогда
			ОбластьМакета.Параметры.Установить(т, "Грузополучатель и его адрес: ----");
			
		ИначеЕсли (Найти(ТекПараметр, "К платежно-расчетному документу №") <> 0)
		   		и (СокрЛП(ТекПараметр) = "К платежно-расчетному документу №  от") Тогда
			ОбластьМакета.Параметры.Установить(т, "К платежно-расчетному документу № -- от --");
			
		ИначеЕсли (Найти(ТекПараметр, "Покупатель:") <> 0)
		   		и (СокрЛП(ТекПараметр) = "Покупатель:") Тогда
			ОбластьМакета.Параметры.Установить(т, "Покупатель: ----");
			
		ИначеЕсли (Найти(ТекПараметр, "Идентификационный номер покупателя (ИНН):") <> 0)
			    и (СокрЛП(ТекПараметр) = "Идентификационный номер покупателя (ИНН):") Тогда
			ОбластьМакета.Параметры.Установить(т, "Идентификационный номер покупателя (ИНН): ----");
			
		ИначеЕсли (Найти(ТекПараметр, "ИНН/КПП покупателя:") <> 0)
			    и (СокрЛП(ТекПараметр) = "ИНН/КПП покупателя:") Тогда
			ОбластьМакета.Параметры.Установить(т, "ИНН/КПП покупателя: ----");
			
		ИначеЕсли НЕ ЗначениеЗаполнено(ТекПараметр) Тогда
			ОбластьМакета.Параметры.Установить(т, "--");
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ПроставитьПрочеркиВПустыеПоля()

Процедура ВывестиРеквизитыКомиссионера(Организация, Поставщик, Покупатель, Дата, Макет, ТабДокумент)
	
	Если ТипЗнч(Покупатель) = Тип("СправочникСсылка.Контрагенты") 
		И (ТипЗнч(Поставщик) = Тип("СправочникСсылка.Контрагенты")
		ИЛИ ТипЗнч(Поставщик) = Тип("Массив")) Тогда
		
		ОбластьМакета = Макет.ПолучитьОбласть("РеквизитыКомиссионера");
		
		СведенияОКомиссионере = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, Дата);
		
		НаименованиеКомиссионера = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОКомиссионере, "НаименованиеДляПечатныхФорм,");
		ЮридическийАдресКомиссионера = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОКомиссионере, "ЮридическийАдрес,");
		ИННКомиссионера = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОКомиссионере, "ИНН,", Ложь);
		КППКомиссионера = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОКомиссионере, "КПП,", Ложь);
		
		ОбластьМакета.Параметры.ПредставлениеКомиссионера = "Составлен комиссионером (агентом): " + НаименованиеКомиссионера 
			+ ", " + ЮридическийАдресКомиссионера 
			+ ", ИНН/КПП: " + ИННКомиссионера 
			+ ?(ЗначениеЗаполнено(КППКомиссионера), "/" + КППКомиссионера, "");
		
		ТабДокумент.Вывести(ОбластьМакета);
		
	КонецЕсли;
	
КонецПроцедуры
